{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "GoGame__GameIsOver",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "GoGame__InvalidPlacing",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "GoGame__IsNotYourTurn",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "GoGame__PlayerDontHaveMatch",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "matchId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "player1",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "player2",
          "type": "address"
        }
      ],
      "name": "FindMatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "matchId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "winner",
          "type": "address"
        }
      ],
      "name": "GameOver",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "matchId",
          "type": "uint256"
        }
      ],
      "name": "GameStateChange",
      "type": "event"
    },
    {
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "matchId",
          "type": "uint256"
        }
      ],
      "name": "BoardState",
      "outputs": [
        {
          "internalType": "enum GoGame.StoneType[361]",
          "name": "",
          "type": "uint8[361]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "matchId",
          "type": "uint256"
        }
      ],
      "name": "GetGameState",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum GoGame.StoneType[361]",
              "name": "boardState",
              "type": "uint8[361]"
            },
            {
              "internalType": "enum GoGame.StoneType",
              "name": "turn",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "isOver",
              "type": "bool"
            }
          ],
          "internalType": "struct GoGame.GameState",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "matchId",
          "type": "uint256"
        }
      ],
      "name": "IsOver",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MyPlayerState",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum GoGame.StoneType",
              "name": "stoneType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "matchId",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "inGame",
              "type": "bool"
            }
          ],
          "internalType": "struct GoGame.PlayerState",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "x",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "y",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "checkWin",
          "type": "bool"
        }
      ],
      "name": "PlaceStone",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "matchId",
          "type": "uint256"
        }
      ],
      "name": "WhosTurn",
      "outputs": [
        {
          "internalType": "enum GoGame.StoneType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requestMatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x276322477632b384e70f395b5bf060540a9380333e36564fe7b925fbb39c6e00",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "2678570",
    "logsBloom": "0x
    "blockHash": "0x0aa0bd14adfad12afda883a418b25e289c452a26795555818c46737aef8c66e2",
    "transactionHash": "0x276322477632b384e70f395b5bf060540a9380333e36564fe7b925fbb39c6e00",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "2678570",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "c307567dc80cc1ec4452b4d2105d7794",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"GoGame__GameIsOver\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GoGame__InvalidPlacing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GoGame__IsNotYourTurn\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GoGame__PlayerDontHaveMatch\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"matchId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player2\",\"type\":\"address\"}],\"name\":\"FindMatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"matchId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"GameOver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"matchId\",\"type\":\"uint256\"}],\"name\":\"GameStateChange\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"matchId\",\"type\":\"uint256\"}],\"name\":\"BoardState\",\"outputs\":[{\"internalType\":\"enum GoGame.StoneType[361]\",\"name\":\"\",\"type\":\"uint8[361]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"matchId\",\"type\":\"uint256\"}],\"name\":\"GetGameState\",\"outputs\":[{\"components\":[{\"internalType\":\"enum GoGame.StoneType[361]\",\"name\":\"boardState\",\"type\":\"uint8[361]\"},{\"internalType\":\"enum GoGame.StoneType\",\"name\":\"turn\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isOver\",\"type\":\"bool\"}],\"internalType\":\"struct GoGame.GameState\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"matchId\",\"type\":\"uint256\"}],\"name\":\"IsOver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MyPlayerState\",\"outputs\":[{\"components\":[{\"internalType\":\"enum GoGame.StoneType\",\"name\":\"stoneType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"matchId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"inGame\",\"type\":\"bool\"}],\"internalType\":\"struct GoGame.PlayerState\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"x\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"y\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"checkWin\",\"type\":\"bool\"}],\"name\":\"PlaceStone\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"matchId\",\"type\":\"uint256\"}],\"name\":\"WhosTurn\",\"outputs\":[{\"internalType\":\"enum GoGame.StoneType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestMatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GoGame.sol\":\"GoGame\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Convert.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nlibrary Convert {\\n  function addressToUint256(address a) public pure returns (uint256) {\\n    return uint256(uint160(a));\\n  }\\n\\n  function addressToBytes32(address add) public pure returns (bytes32) {\\n    return uint256ToBytes32(addressToUint256(add));\\n  }\\n\\n  function uint256ToBytes32(uint256 num) public pure returns (bytes32) {\\n    bytes memory addBytes = abi.encodePacked(num);\\n    bytes32 out;\\n    for (uint256 i = 0; i < 32; i++) {\\n      out |= bytes32(addBytes[i] & 0xFF) >> (i * 8);\\n    }\\n    return out;\\n  }\\n}\\n\",\"keccak256\":\"0x2822cf815730646d1e575c5d15531142c7882ab61432707e1fe03c91b8dd6d8e\",\"license\":\"MIT\"},\"contracts/GoGame.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Convert.sol\\\";\\n\\nerror GoGame__PlayerDontHaveMatch();\\nerror GoGame__GameIsOver();\\nerror GoGame__IsNotYourTurn();\\nerror GoGame__InvalidPlacing();\\n\\ncontract GoGame {\\n    enum StoneType {\\n        None, // 0\\n        Black, // 1\\n        White // 2\\n    }\\n\\n    struct GameState {\\n        StoneType[19 * 19] boardState; // current board state\\n        StoneType turn; // whos turn is it now\\n        bool isOver;\\n    }\\n\\n    struct PlayerState {\\n        StoneType stoneType;\\n        uint256 matchId;\\n        bool inGame;\\n    }\\n\\n    event FindMatch(uint256 indexed matchId, address player1, address player2);\\n    event GameStateChange(uint256 indexed matchId);\\n    event GameOver(uint256 indexed matchId, address winner);\\n\\n    address[] matchQueue;\\n    mapping(uint256 => GameState) matchIdToGS; // index by match id\\n    mapping(address => PlayerState) addressToPS; // index by address\\n    uint32 matchCnt;\\n\\n    /* public & external function  */\\n    constructor() {\\n        // match id 0 default\\n        StoneType[361] memory boardState;\\n        GameState memory gs = GameState(boardState, StoneType.White, true);\\n        matchIdToGS[0] = gs;\\n    }\\n\\n    function requestMatch() public {\\n        address[] memory mq = matchQueue;\\n        if (mq.length == 0) {\\n            matchQueue.push(msg.sender);\\n        } else if (mq.length == 1) {\\n            // check is in queue already\\n            if (mq[0] == msg.sender) return;\\n            // match\\n            // create new game\\n            uint256 matchId = createNewGame(mq[0], msg.sender);\\n            // emit event\\n            emit FindMatch(matchId, mq[0], msg.sender);\\n            // clear match queue\\n            delete matchQueue;\\n        }\\n    }\\n\\n    // player place stone\\n    function PlaceStone(\\n        uint8 x,\\n        uint8 y,\\n        bool checkWin\\n    ) public {\\n        // find out player match\\n        PlayerState memory ps = addressToPS[msg.sender];\\n        if (ps.matchId == 0) {\\n            revert GoGame__PlayerDontHaveMatch();\\n        }\\n        // check is game is not over and is player turn\\n        GameState memory gs = matchIdToGS[ps.matchId];\\n        if (gs.isOver) {\\n            revert GoGame__GameIsOver();\\n        }\\n        if (gs.turn != ps.stoneType) {\\n            revert GoGame__IsNotYourTurn();\\n        }\\n        // check place index is valid\\n        if (\\n            (x < 0 || x >= 19) ||\\n            (y < 0 || y >= 19) ||\\n            gs.boardState[uint16(x) + uint16(y) * 19] != StoneType.None\\n        ) {\\n            revert GoGame__InvalidPlacing();\\n        }\\n\\n        // place stone\\n        matchIdToGS[ps.matchId].boardState[uint16(x) + uint16(y) * 19] = ps.stoneType;\\n        matchIdToGS[ps.matchId].turn = ps.stoneType == StoneType.White\\n            ? StoneType.Black\\n            : StoneType.White;\\n        emit GameStateChange(ps.matchId);\\n\\n        if (checkWin) {\\n            // check win condition\\n            // 1. up -> right -> down -> left\\n            uint8[8] memory cnt;\\n            int8[2][4][8] memory vecs = [\\n                [\\n                    [int8(0), int8(1)],\\n                    [int8(0), int8(2)],\\n                    [int8(0), int8(3)],\\n                    [int8(0), int8(4)]\\n                ],\\n                [\\n                    [int8(1), int8(1)],\\n                    [int8(2), int8(2)],\\n                    [int8(3), int8(3)],\\n                    [int8(4), int8(4)]\\n                ],\\n                [\\n                    [int8(1), int8(0)],\\n                    [int8(2), int8(0)],\\n                    [int8(3), int8(0)],\\n                    [int8(4), int8(0)]\\n                ],\\n                [\\n                    [int8(1), int8(-1)],\\n                    [int8(2), int8(-2)],\\n                    [int8(3), int8(-3)],\\n                    [int8(4), int8(-4)]\\n                ],\\n                [\\n                    [int8(0), int8(-1)],\\n                    [int8(0), int8(-2)],\\n                    [int8(0), int8(-3)],\\n                    [int8(0), int8(-4)]\\n                ],\\n                [\\n                    [int8(-1), int8(-1)],\\n                    [int8(-2), int8(-2)],\\n                    [int8(-3), int8(-3)],\\n                    [int8(-4), int8(-4)]\\n                ],\\n                [\\n                    [int8(-1), int8(0)],\\n                    [int8(-2), int8(0)],\\n                    [int8(-3), int8(0)],\\n                    [int8(-4), int8(0)]\\n                ],\\n                [\\n                    [int8(-1), int8(1)],\\n                    [int8(-2), int8(2)],\\n                    [int8(-3), int8(3)],\\n                    [int8(-4), int8(4)]\\n                ]\\n            ];\\n\\n            for (uint8 i = 0; i < 8; i++) {\\n                for (uint8 j = 0; j < 4; j++) {\\n                    // checking index\\n                    int8 nx = int8(x) + vecs[i][j][0];\\n                    int8 ny = int8(y) + vecs[i][j][1];\\n                    // check out of bound\\n                    if (nx < 0 || nx >= 19 || ny < 0 || ny >= 19) break;\\n                    // if line is continuous\\n                    if (\\n                        gs.boardState[\\n                            uint16(uint8(nx)) + 19 * uint16(uint8(ny))\\n                        ] == ps.stoneType\\n                    ) {\\n                        // cnt add\\n                        cnt[i]++;\\n                    } else {\\n                        // this line is done\\n                        break;\\n                    }\\n                }\\n            }\\n\\n            // check have 5 in a line\\n            for (uint8 i = 0; i < 4; i++) {\\n                if (cnt[i] + cnt[i + 4] >= 4) {\\n                    // win\\n                    matchIdToGS[ps.matchId].isOver = true;\\n                    emit GameOver(ps.matchId, msg.sender);\\n                    break;\\n                }\\n            }\\n        }\\n    }\\n\\n\\n\\n    /* private & internal function */\\n\\n    function createNewGame(address p1, address p2)\\n        private\\n        returns (uint256 matchId)\\n    {\\n        // initial game state\\n        StoneType[361] memory boardState;\\n        GameState memory gs = GameState(boardState, StoneType.White, false);\\n        // add to map\\n        matchIdToGS[++matchCnt] = gs;\\n        // decide who is white/black\\n        bool p1IsWhite = decideStoneType(p1, p2);\\n        // init player state\\n        StoneType p1Stone = p1IsWhite ? StoneType.White : StoneType.Black;\\n        StoneType p2Stone = p1IsWhite ? StoneType.Black : StoneType.White;\\n        // add to map\\n        addressToPS[p1] = PlayerState(p1Stone, matchCnt, true);\\n        addressToPS[p2] = PlayerState(p2Stone, matchCnt, true);\\n\\n        return matchCnt;\\n    }\\n\\n    function decideStoneType(address p1, address p2)\\n        private\\n        view\\n        returns (bool p1IsWhite)\\n    {\\n        bytes32 randomHash = sha256(\\n            abi.encodePacked(\\n                Convert.addressToBytes32(p1) ^\\n                    Convert.addressToBytes32(p2) ^\\n                    Convert.uint256ToBytes32(block.timestamp)\\n            )\\n        );\\n\\n        if (uint256(randomHash) % 2 == 0) {\\n            // p1 is white\\n            return true;\\n        } else {\\n            // p2 is white\\n            return false;\\n        }\\n    }\\n\\n    /* pure & view function */\\n    function BoardState(uint256 matchId)\\n        public\\n        view\\n        returns (StoneType[361] memory)\\n    {\\n        return matchIdToGS[matchId].boardState;\\n    }\\n\\n    function WhosTurn(uint256 matchId) public view returns (StoneType) {\\n        return matchIdToGS[matchId].turn;\\n    }\\n\\n    function IsOver(uint256 matchId) public view returns (bool) {\\n        return matchIdToGS[matchId].isOver;\\n    }\\n\\n\\n    function GetGameState(uint256 matchId) public view returns (GameState memory){\\n        return matchIdToGS[matchId];\\n    }\\n\\n    function MyPlayerState() public view returns (PlayerState memory) {\\n        return addressToPS[msg.sender];\\n    }\\n\\n    /* fall back function */\\n    fallback() external\\n    {\\n        \\n    }\\n}\\n\",\"keccak256\":\"0xd08df0c8fc5494834764b60b3890520f200ba3f786251e0a4833feaf1e81cf54\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100815760003560e01c8063929ce1e71161005b578063929ce1e7146100ee578063947d9de61461011e578063b40aea9c1461013c578063f27f91f41461015857610082565b806303a504a51461008457806317d537ab146100b457806356f39089146100be57610082565b5b005b61009e6004803603810190610099919061240d565b610188565b6040516100ab919061275a565b60405180910390f35b6100bc6101b5565b005b6100d860048036038101906100d3919061240d565b610414565b6040516100e5919061273f565b60405180910390f35b6101086004803603810190610103919061240d565b610441565b6040516101159190612775565b60405180910390f35b6101266105b2565b6040516101339190612791565b60405180910390f35b61015660048036038101906101519190612436565b6106b5565b005b610172600480360381019061016d919061240d565b611a85565b60405161017f9190612723565b60405180910390f35b600060016000838152602001908152602001600020600c0160009054906101000a900460ff169050919050565b60008080548060200260200160405190810160405280929190818152602001828054801561023857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116101ee575b505050505090506000815114156102b1576000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610410565b60018151141561040f573373ffffffffffffffffffffffffffffffffffffffff168160008151811061030c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1614156103365750610412565b600061038382600081518110610375577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015133611b43565b9050807fc8180a8ee09fc569927768d3d1f03623b0a7285e443513d6085410c1a36436a3836000815181106103e1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151336040516103f89291906126fa565b60405180910390a260008061040d919061217f565b505b5b505b565b600060016000838152602001908152602001600020600c0160019054906101000a900460ff169050919050565b6104496121a0565b60016000838152602001908152602001600020604051806060016040529081600082016101698060200260405190810160405280929190826101698015610500576020028201916000905b82829054906101000a900460ff1660028111156104da577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200190600101906020826000010492830192600103820291508084116104945790505b50505050508152602001600c820160009054906101000a900460ff166002811115610554577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600281111561058c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600c820160019054906101000a900460ff1615151515815250509050919050565b6105ba612201565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900460ff16600281111561064f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115610687577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600182015481526020016002820160009054906101000a900460ff161515151581525050905090565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900460ff16600281111561074c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115610784577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600182015481526020016002820160009054906101000a900460ff16151515158152505090506000816020015114156107ee576040517f0e9a606400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060016000836020015181526020019081526020016000206040518060600160405290816000820161016980602002604051908101604052809291908261016980156108ab576020028201916000905b82829054906101000a900460ff166002811115610885577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001906001019060208260000104928301926001038202915080841161083f5790505b50505050508152602001600c820160009054906101000a900460ff1660028111156108ff577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115610937577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600c820160019054906101000a900460ff1615151515815250509050806040015115610994576040517f52c9b99c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b816000015160028111156109d1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81602001516002811115610a0e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610a45576040517f34cc6b6600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008560ff161080610a5b575060138560ff1610155b80610a78575060008460ff161080610a77575060138460ff1610155b5b80610b57575060006002811115610ab8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816000015160138660ff16610acd91906128fa565b8760ff16610adb919061288b565b61ffff166101698110610b17577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201516002811115610b54577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14155b15610b8e576040517f33984b1d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160000151600160008460200151815260200190815260200160002060000160138660ff16610bbd91906128fa565b8760ff16610bcb919061288b565b61ffff166101698110610c07577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602091828204019190066101000a81548160ff02191690836002811115610c57577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550600280811115610c95577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b82600001516002811115610cd2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610cde576002610ce1565b60015b6001600084602001518152602001908152602001600020600c0160006101000a81548160ff02191690836002811115610d43577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555081602001517f453d704a20a3df7c9ae4cff3c0661ec7a0cd8494f38d14d9506ae7a402957fbd60405160405180910390a28215611a7e57610d8761225c565b6000604051806101000160405280604051806080016040528060405180604001604052806000800b60000b8152602001600160000b60000b815250815260200160405180604001604052806000800b60000b8152602001600260000b60000b815250815260200160405180604001604052806000800b60000b8152602001600360000b60000b815250815260200160405180604001604052806000800b60000b8152602001600460000b60000b815250815250815260200160405180608001604052806040518060400160405280600160000b60000b8152602001600160000b60000b81525081526020016040518060400160405280600260000b60000b8152602001600260000b60000b81525081526020016040518060400160405280600360000b60000b8152602001600360000b60000b81525081526020016040518060400160405280600460000b60000b8152602001600460000b60000b815250815250815260200160405180608001604052806040518060400160405280600160000b60000b81526020016000800b60000b81525081526020016040518060400160405280600260000b60000b81526020016000800b60000b81525081526020016040518060400160405280600360000b60000b81526020016000800b60000b81525081526020016040518060400160405280600460000b60000b81526020016000800b60000b815250815250815260200160405180608001604052806040518060400160405280600160000b60000b81526020017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60000b60000b81525081526020016040518060400160405280600260000b60000b81526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60000b60000b81525081526020016040518060400160405280600360000b60000b81526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd60000b60000b81525081526020016040518060400160405280600460000b60000b81526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60000b60000b8152508152508152602001604051806080016040528060405180604001604052806000800b60000b81526020017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60000b60000b815250815260200160405180604001604052806000800b60000b81526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60000b60000b815250815260200160405180604001604052806000800b60000b81526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd60000b60000b815250815260200160405180604001604052806000800b60000b81526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60000b60000b8152508152508152602001604051806080016040528060405180604001604052807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60000b60000b81526020017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60000b60000b815250815260200160405180604001604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60000b60000b81526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60000b60000b815250815260200160405180604001604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd60000b60000b81526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd60000b60000b815250815260200160405180604001604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60000b60000b81526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60000b60000b8152508152508152602001604051806080016040528060405180604001604052807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60000b60000b81526020016000800b60000b815250815260200160405180604001604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60000b60000b81526020016000800b60000b815250815260200160405180604001604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd60000b60000b81526020016000800b60000b815250815260200160405180604001604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60000b60000b81526020016000800b60000b8152508152508152602001604051806080016040528060405180604001604052807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60000b60000b8152602001600160000b60000b815250815260200160405180604001604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60000b60000b8152602001600260000b60000b815250815260200160405180604001604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd60000b60000b8152602001600360000b60000b815250815260200160405180604001604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60000b60000b8152602001600460000b60000b815250815250815250905060005b60088160ff1610156119425760005b60048160ff16101561192e576000838360ff1660088110611639577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201518260ff1660048110611679577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201516000600281106116b7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201518a6116c79190612816565b90506000848460ff1660088110611707577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201518360ff1660048110611747577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151600160028110611785577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201518a6117959190612816565b905060008260000b12806117ad575060138260000b12155b806117bb575060008160000b125b806117ca575060138160000b12155b156117d657505061192e565b87600001516002811115611813577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b87600001518260ff16601361182891906128fa565b8460ff16611836919061288b565b61ffff166101698110611872577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002015160028111156118af577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561191257858460ff16600881106118f1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201805180919061190390612a45565b60ff1660ff1681525050611919565b505061192e565b5050808061192690612a45565b9150506115ef565b50808061193a90612a45565b9150506115e0565b5060005b60048160ff161015611a7a5760048360048361196291906128c3565b60ff166008811061199c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151848360ff16600881106119dd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201516119ec91906128c3565b60ff1610611a6757600180600087602001518152602001908152602001600020600c0160016101000a81548160ff02191690831515021790555084602001517f668ce4ca171dee87d4d9d2b5d3dc31963fe7fbe50b982064dddb0fb9d56aee8b33604051611a5a91906126df565b60405180910390a2611a7a565b8080611a7290612a45565b915050611946565b5050505b5050505050565b611a8d61227f565b600160008381526020019081526020016000206000016101698060200260405190810160405280929190826101698015611b37576020028201916000905b82829054906101000a900460ff166002811115611b11577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020019060010190602082600001049283019260010382029150808411611acb5790505b50505050509050919050565b6000611b4d61227f565b60006040518060600160405280838152602001600280811115611b99577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200160001515815250905080600160006003600081819054906101000a900463ffffffff16611bca90612a18565b91906101000a81548163ffffffff021916908363ffffffff160217905563ffffffff16815260200190815260200160002060008201518160000190610169611c139291906122a3565b50602082015181600c0160006101000a81548160ff02191690836002811115611c65577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550604082015181600c0160016101000a81548160ff0219169083151502179055509050506000611c998686611f47565b9050600081611ca9576001611cac565b60025b9050600082611cbc576002611cbf565b60015b90506040518060600160405280836002811115611d05577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600360009054906101000a900463ffffffff1663ffffffff16815260200160011515815250600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff02191690836002811115611dbf577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506020820151816001015560408201518160020160006101000a81548160ff0219169083151502179055509050506040518060600160405280826002811115611e35577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600360009054906101000a900463ffffffff1663ffffffff16815260200160011515815250600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff02191690836002811115611eef577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506020820151816001015560408201518160020160006101000a81548160ff021916908315150217905550905050600360009054906101000a900463ffffffff1663ffffffff169550505050505092915050565b600080600273__$a74ec4f9c45ea3e03fb5242c6921c0f692$__635edb2fb3426040518263ffffffff1660e01b8152600401611f8391906127ac565b60206040518083038186803b158015611f9b57600080fd5b505af4158015611faf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fd391906123e4565b73__$a74ec4f9c45ea3e03fb5242c6921c0f692$__6382c947b7866040518263ffffffff1660e01b815260040161200a91906126c4565b60206040518083038186803b15801561202257600080fd5b505af4158015612036573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061205a91906123e4565b73__$a74ec4f9c45ea3e03fb5242c6921c0f692$__6382c947b7886040518263ffffffff1660e01b815260040161209191906126c4565b60206040518083038186803b1580156120a957600080fd5b505af41580156120bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120e191906123e4565b18186040516020016120f39190612692565b60405160208183030381529060405260405161210f91906126ad565b602060405180830381855afa15801561212c573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061214f91906123e4565b9050600060028260001c6121639190612a79565b1415612173576001915050612179565b60009150505b92915050565b508054600082559060005260206000209081019061219d9190612373565b50565b60405180606001604052806121b361227f565b8152602001600060028111156121f2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020016000151581525090565b604051806060016040528060006002811115612246577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600081526020016000151581525090565b604051806101000160405280600890602082028036833780820191505090505090565b60405180612d20016040528061016990602082028036833780820191505090505090565b82610169601f016020900481019282156123625791602002820160005b8382111561233357835183826101000a81548160ff02191690836002811115612312577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555092602001926001016020816000010492830192600103026122c0565b80156123605782816101000a81549060ff0219169055600101602081600001049283019260010302612333565b505b50905061236f9190612373565b5090565b5b8082111561238c576000816000905550600101612374565b5090565b60008135905061239f81612b4b565b92915050565b6000815190506123b481612b62565b92915050565b6000813590506123c981612b79565b92915050565b6000813590506123de81612b90565b92915050565b6000602082840312156123f657600080fd5b6000612404848285016123a5565b91505092915050565b60006020828403121561241f57600080fd5b600061242d848285016123ba565b91505092915050565b60008060006060848603121561244b57600080fd5b6000612459868287016123cf565b935050602061246a868287016123cf565b925050604061247b86828701612390565b9150509250925092565b600061249183836125cf565b60208301905092915050565b6124a681612936565b82525050565b6124b581612936565b82525050565b6124c4816127d1565b6124ce81846127f5565b92506124d9826127c7565b8060005b8381101561250a5781516124f18782612485565b96506124fc836127e8565b9250506001810190506124dd565b505050505050565b61251b816127d1565b6125258184612800565b9250612530826127c7565b8060005b838110156125615781516125488782612485565b9650612553836127e8565b925050600181019050612534565b505050505050565b61257281612948565b82525050565b61258181612948565b82525050565b61259861259382612954565b612a6f565b82525050565b60006125a9826127dd565b6125b3818561280b565b93506125c38185602086016129e5565b80840191505092915050565b6125d8816129d3565b82525050565b6125e7816129d3565b82525050565b612d608201600082015161260460008501826124bb565b506020820151612618612d208501826125cf565b50604082015161262c612d40850182612569565b50505050565b60608201600082015161264860008501826125cf565b50602082015161265b6020850182612674565b50604082015161266e6040850182612569565b50505050565b61267d816129ac565b82525050565b61268c816129ac565b82525050565b600061269e8284612587565b60208201915081905092915050565b60006126b9828461259e565b915081905092915050565b60006020820190506126d960008301846124ac565b92915050565b60006020820190506126f4600083018461249d565b92915050565b600060408201905061270f600083018561249d565b61271c602083018461249d565b9392505050565b6000612d20820190506127396000830184612512565b92915050565b60006020820190506127546000830184612578565b92915050565b600060208201905061276f60008301846125de565b92915050565b6000612d608201905061278b60008301846125ed565b92915050565b60006060820190506127a66000830184612632565b92915050565b60006020820190506127c16000830184612683565b92915050565b6000819050919050565b60006101699050919050565b600081519050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600081905092915050565b600061282182612971565b915061282c83612971565b925081607f0383136000831215161561284857612847612aaa565b5b817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800383126000831216156128805761287f612aaa565b5b828201905092915050565b60006128968261297e565b91506128a18361297e565b92508261ffff038211156128b8576128b7612aaa565b5b828201905092915050565b60006128ce826129c6565b91506128d9836129c6565b92508260ff038211156128ef576128ee612aaa565b5b828201905092915050565b60006129058261297e565b91506129108361297e565b92508161ffff048311821515161561292b5761292a612aaa565b5b828202905092915050565b60006129418261298c565b9050919050565b60008115159050919050565b6000819050919050565b600081905061296c82612b37565b919050565b60008160000b9050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600060ff82169050919050565b60006129de8261295e565b9050919050565b60005b83811015612a035780820151818401526020810190506129e8565b83811115612a12576000848401525b50505050565b6000612a23826129b6565b915063ffffffff821415612a3a57612a39612aaa565b5b600182019050919050565b6000612a50826129c6565b915060ff821415612a6457612a63612aaa565b5b600182019050919050565b6000819050919050565b6000612a84826129ac565b9150612a8f836129ac565b925082612a9f57612a9e612ad9565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110612b4857612b47612b08565b5b50565b612b5481612948565b8114612b5f57600080fd5b50565b612b6b81612954565b8114612b7657600080fd5b50565b612b82816129ac565b8114612b8d57600080fd5b50565b612b99816129c6565b8114612ba457600080fd5b5056fea26469706673582212203ef0171b50c6c5ed1c59a1505f3ea7ce0590f23048de33cf14c77ae0ee546ee964736f6c63430008040033",
  "libraries": {
    "Convert": "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  },
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 137,
        "contract": "contracts/GoGame.sol:GoGame",
        "label": "matchQueue",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 142,
        "contract": "contracts/GoGame.sol:GoGame",
        "label": "matchIdToGS",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(GameState)108_storage)"
      },
      {
        "astId": 147,
        "contract": "contracts/GoGame.sol:GoGame",
        "label": "addressToPS",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_struct(PlayerState)116_storage)"
      },
      {
        "astId": 149,
        "contract": "contracts/GoGame.sol:GoGame",
        "label": "matchCnt",
        "offset": 0,
        "slot": "3",
        "type": "t_uint32"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_enum(StoneType)95)361_storage": {
        "base": "t_enum(StoneType)95",
        "encoding": "inplace",
        "label": "enum GoGame.StoneType[361]",
        "numberOfBytes": "384"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(StoneType)95": {
        "encoding": "inplace",
        "label": "enum GoGame.StoneType",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(PlayerState)116_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct GoGame.PlayerState)",
        "numberOfBytes": "32",
        "value": "t_struct(PlayerState)116_storage"
      },
      "t_mapping(t_uint256,t_struct(GameState)108_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct GoGame.GameState)",
        "numberOfBytes": "32",
        "value": "t_struct(GameState)108_storage"
      },
      "t_struct(GameState)108_storage": {
        "encoding": "inplace",
        "label": "struct GoGame.GameState",
        "members": [
          {
            "astId": 102,
            "contract": "contracts/GoGame.sol:GoGame",
            "label": "boardState",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_enum(StoneType)95)361_storage"
          },
          {
            "astId": 105,
            "contract": "contracts/GoGame.sol:GoGame",
            "label": "turn",
            "offset": 0,
            "slot": "12",
            "type": "t_enum(StoneType)95"
          },
          {
            "astId": 107,
            "contract": "contracts/GoGame.sol:GoGame",
            "label": "isOver",
            "offset": 1,
            "slot": "12",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "416"
      },
      "t_struct(PlayerState)116_storage": {
        "encoding": "inplace",
        "label": "struct GoGame.PlayerState",
        "members": [
          {
            "astId": 111,
            "contract": "contracts/GoGame.sol:GoGame",
            "label": "stoneType",
            "offset": 0,
            "slot": "0",
            "type": "t_enum(StoneType)95"
          },
          {
            "astId": 113,
            "contract": "contracts/GoGame.sol:GoGame",
            "label": "matchId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 115,
            "contract": "contracts/GoGame.sol:GoGame",
            "label": "inGame",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      }
    }
  }
}