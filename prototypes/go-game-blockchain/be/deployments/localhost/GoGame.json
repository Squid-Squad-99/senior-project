{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "GoGame__GameIsOver",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "GoGame__InvalidPlacing",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "GoGame__IsNotYourTurn",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "GoGame__PlayerDontHaveMatch",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "matchId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "player1",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "player2",
          "type": "address"
        }
      ],
      "name": "FindMatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "matchId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "winner",
          "type": "address"
        }
      ],
      "name": "GameOver",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "matchId",
          "type": "uint256"
        }
      ],
      "name": "GameStateChange",
      "type": "event"
    },
    {
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "matchId",
          "type": "uint256"
        }
      ],
      "name": "BoardState",
      "outputs": [
        {
          "internalType": "enum GoGame.StoneType[361]",
          "name": "",
          "type": "uint8[361]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "matchId",
          "type": "uint256"
        }
      ],
      "name": "GetGameState",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum GoGame.StoneType[361]",
              "name": "boardState",
              "type": "uint8[361]"
            },
            {
              "internalType": "enum GoGame.StoneType",
              "name": "turn",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "isOver",
              "type": "bool"
            }
          ],
          "internalType": "struct GoGame.GameState",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "matchId",
          "type": "uint256"
        }
      ],
      "name": "IsOver",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MyPlayerState",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum GoGame.StoneType",
              "name": "stoneType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "matchId",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "inGame",
              "type": "bool"
            }
          ],
          "internalType": "struct GoGame.PlayerState",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "x",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "y",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "checkWin",
          "type": "bool"
        }
      ],
      "name": "PlaceStone",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "matchId",
          "type": "uint256"
        }
      ],
      "name": "WhosTurn",
      "outputs": [
        {
          "internalType": "enum GoGame.StoneType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requestMatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x7b678e8edbbf365521f367e48aa7cdbfd818c6a6098c1769f4c12d3cbdde72d2",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "2689784",
    "logsBloom": "0x
    "blockHash": "0xccb269cecdcb0acf501e4ba80b592c022ac1481ef81ca834b6879859b4e95fe7",
    "transactionHash": "0x7b678e8edbbf365521f367e48aa7cdbfd818c6a6098c1769f4c12d3cbdde72d2",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "2689784",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "bd6285e0e5291524660733cc436cd7b7",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"GoGame__GameIsOver\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GoGame__InvalidPlacing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GoGame__IsNotYourTurn\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GoGame__PlayerDontHaveMatch\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"matchId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player2\",\"type\":\"address\"}],\"name\":\"FindMatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"matchId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"GameOver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"matchId\",\"type\":\"uint256\"}],\"name\":\"GameStateChange\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"matchId\",\"type\":\"uint256\"}],\"name\":\"BoardState\",\"outputs\":[{\"internalType\":\"enum GoGame.StoneType[361]\",\"name\":\"\",\"type\":\"uint8[361]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"matchId\",\"type\":\"uint256\"}],\"name\":\"GetGameState\",\"outputs\":[{\"components\":[{\"internalType\":\"enum GoGame.StoneType[361]\",\"name\":\"boardState\",\"type\":\"uint8[361]\"},{\"internalType\":\"enum GoGame.StoneType\",\"name\":\"turn\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isOver\",\"type\":\"bool\"}],\"internalType\":\"struct GoGame.GameState\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"matchId\",\"type\":\"uint256\"}],\"name\":\"IsOver\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MyPlayerState\",\"outputs\":[{\"components\":[{\"internalType\":\"enum GoGame.StoneType\",\"name\":\"stoneType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"matchId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"inGame\",\"type\":\"bool\"}],\"internalType\":\"struct GoGame.PlayerState\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"x\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"y\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"checkWin\",\"type\":\"bool\"}],\"name\":\"PlaceStone\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"matchId\",\"type\":\"uint256\"}],\"name\":\"WhosTurn\",\"outputs\":[{\"internalType\":\"enum GoGame.StoneType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestMatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GoGame.sol\":\"GoGame\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Convert.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nlibrary Convert {\\n  function addressToUint256(address a) public pure returns (uint256) {\\n    return uint256(uint160(a));\\n  }\\n\\n  function addressToBytes32(address add) public pure returns (bytes32) {\\n    return uint256ToBytes32(addressToUint256(add));\\n  }\\n\\n  function uint256ToBytes32(uint256 num) public pure returns (bytes32) {\\n    bytes memory addBytes = abi.encodePacked(num);\\n    bytes32 out;\\n    for (uint256 i = 0; i < 32; i++) {\\n      out |= bytes32(addBytes[i] & 0xFF) >> (i * 8);\\n    }\\n    return out;\\n  }\\n}\\n\",\"keccak256\":\"0x2822cf815730646d1e575c5d15531142c7882ab61432707e1fe03c91b8dd6d8e\",\"license\":\"MIT\"},\"contracts/GoGame.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Convert.sol\\\";\\n\\nerror GoGame__PlayerDontHaveMatch();\\nerror GoGame__GameIsOver();\\nerror GoGame__IsNotYourTurn();\\nerror GoGame__InvalidPlacing();\\n\\ncontract GoGame {\\n    enum StoneType {\\n        None, // 0\\n        Black, // 1\\n        White // 2\\n    }\\n\\n    struct GameState {\\n        StoneType[19 * 19] boardState; // current board state\\n        StoneType turn; // whos turn is it now\\n        bool isOver;\\n    }\\n\\n    struct PlayerState {\\n        StoneType stoneType;\\n        uint256 matchId;\\n        bool inGame;\\n    }\\n\\n    event FindMatch(uint256 indexed matchId, address player1, address player2);\\n    event GameStateChange(uint256 indexed matchId);\\n    event GameOver(uint256 indexed matchId, address winner);\\n\\n    address[] matchQueue;\\n    mapping(uint256 => GameState) matchIdToGS; // index by match id\\n    mapping(address => PlayerState) addressToPS; // index by address\\n    uint32 matchCnt;\\n\\n    /* public & external function  */\\n    constructor() {\\n        // match id 0 default\\n        StoneType[361] memory boardState;\\n        GameState memory gs = GameState(boardState, StoneType.White, true);\\n        matchIdToGS[0] = gs;\\n    }\\n\\n    function requestMatch() public {\\n        address[] memory mq = matchQueue;\\n        if (mq.length == 0) {\\n            matchQueue.push(msg.sender);\\n        } else if (mq.length == 1) {\\n            // check is in queue already\\n            if (mq[0] == msg.sender) return;\\n            // match\\n            // create new game\\n            uint256 matchId = createNewGame(mq[0], msg.sender);\\n            // emit event\\n            emit FindMatch(matchId, mq[0], msg.sender);\\n            // clear match queue\\n            delete matchQueue;\\n        }\\n    }\\n\\n    // player place stone\\n    function PlaceStone(\\n        uint8 x,\\n        uint8 y,\\n        bool checkWin\\n    ) public {\\n        // find out player match\\n        PlayerState memory ps = addressToPS[msg.sender];\\n        if (ps.matchId == 0) {\\n            revert GoGame__PlayerDontHaveMatch();\\n        }\\n        // check is game is not over and is player turn\\n        GameState memory gs = matchIdToGS[ps.matchId];\\n        if (gs.isOver) {\\n            revert GoGame__GameIsOver();\\n        }\\n        if (gs.turn != ps.stoneType) {\\n            revert GoGame__IsNotYourTurn();\\n        }\\n        // check place index is valid\\n        if (\\n            (x < 0 || x >= 19) ||\\n            (y < 0 || y >= 19) ||\\n            gs.boardState[uint16(x) + uint16(y) * 19] != StoneType.None\\n        ) {\\n            revert GoGame__InvalidPlacing();\\n        }\\n\\n        // place stone\\n        matchIdToGS[ps.matchId].boardState[x + y * 19] = ps.stoneType;\\n        matchIdToGS[ps.matchId].turn = ps.stoneType == StoneType.White\\n            ? StoneType.Black\\n            : StoneType.White;\\n        emit GameStateChange(ps.matchId);\\n\\n        if (checkWin) {\\n            // check win condition\\n            // 1. up -> right -> down -> left\\n            uint8[8] memory cnt;\\n            int8[2][4][8] memory vecs = [\\n                [\\n                    [int8(0), int8(1)],\\n                    [int8(0), int8(2)],\\n                    [int8(0), int8(3)],\\n                    [int8(0), int8(4)]\\n                ],\\n                [\\n                    [int8(1), int8(1)],\\n                    [int8(2), int8(2)],\\n                    [int8(3), int8(3)],\\n                    [int8(4), int8(4)]\\n                ],\\n                [\\n                    [int8(1), int8(0)],\\n                    [int8(2), int8(0)],\\n                    [int8(3), int8(0)],\\n                    [int8(4), int8(0)]\\n                ],\\n                [\\n                    [int8(1), int8(-1)],\\n                    [int8(2), int8(-2)],\\n                    [int8(3), int8(-3)],\\n                    [int8(4), int8(-4)]\\n                ],\\n                [\\n                    [int8(0), int8(-1)],\\n                    [int8(0), int8(-2)],\\n                    [int8(0), int8(-3)],\\n                    [int8(0), int8(-4)]\\n                ],\\n                [\\n                    [int8(-1), int8(-1)],\\n                    [int8(-2), int8(-2)],\\n                    [int8(-3), int8(-3)],\\n                    [int8(-4), int8(-4)]\\n                ],\\n                [\\n                    [int8(-1), int8(0)],\\n                    [int8(-2), int8(0)],\\n                    [int8(-3), int8(0)],\\n                    [int8(-4), int8(0)]\\n                ],\\n                [\\n                    [int8(-1), int8(1)],\\n                    [int8(-2), int8(2)],\\n                    [int8(-3), int8(3)],\\n                    [int8(-4), int8(4)]\\n                ]\\n            ];\\n\\n            for (uint8 i = 0; i < 8; i++) {\\n                for (uint8 j = 0; j < 4; j++) {\\n                    // checking index\\n                    int8 nx = int8(x) + vecs[i][j][0];\\n                    int8 ny = int8(y) + vecs[i][j][1];\\n                    // check out of bound\\n                    if (nx < 0 || nx >= 19 || ny < 0 || ny >= 19) break;\\n                    // if line is continuous\\n                    if (\\n                        gs.boardState[\\n                            uint16(uint8(nx)) + 19 * uint16(uint8(ny))\\n                        ] == ps.stoneType\\n                    ) {\\n                        // cnt add\\n                        cnt[i]++;\\n                    } else {\\n                        // this line is done\\n                        break;\\n                    }\\n                }\\n            }\\n\\n            // check have 5 in a line\\n            for (uint8 i = 0; i < 4; i++) {\\n                if (cnt[i] + cnt[i + 4] >= 4) {\\n                    // win\\n                    matchIdToGS[ps.matchId].isOver = true;\\n                    emit GameOver(ps.matchId, msg.sender);\\n                    break;\\n                }\\n            }\\n        }\\n    }\\n\\n\\n\\n    /* private & internal function */\\n\\n    function createNewGame(address p1, address p2)\\n        private\\n        returns (uint256 matchId)\\n    {\\n        // initial game state\\n        StoneType[361] memory boardState;\\n        GameState memory gs = GameState(boardState, StoneType.White, false);\\n        // add to map\\n        matchIdToGS[++matchCnt] = gs;\\n        // decide who is white/black\\n        bool p1IsWhite = decideStoneType(p1, p2);\\n        // init player state\\n        StoneType p1Stone = p1IsWhite ? StoneType.White : StoneType.Black;\\n        StoneType p2Stone = p1IsWhite ? StoneType.Black : StoneType.White;\\n        // add to map\\n        addressToPS[p1] = PlayerState(p1Stone, matchCnt, true);\\n        addressToPS[p2] = PlayerState(p2Stone, matchCnt, true);\\n\\n        return matchCnt;\\n    }\\n\\n    function decideStoneType(address p1, address p2)\\n        private\\n        view\\n        returns (bool p1IsWhite)\\n    {\\n        bytes32 randomHash = sha256(\\n            abi.encodePacked(\\n                Convert.addressToBytes32(p1) ^\\n                    Convert.addressToBytes32(p2) ^\\n                    Convert.uint256ToBytes32(block.timestamp)\\n            )\\n        );\\n\\n        if (uint256(randomHash) % 2 == 0) {\\n            // p1 is white\\n            return true;\\n        } else {\\n            // p2 is white\\n            return false;\\n        }\\n    }\\n\\n    /* pure & view function */\\n    function BoardState(uint256 matchId)\\n        public\\n        view\\n        returns (StoneType[361] memory)\\n    {\\n        return matchIdToGS[matchId].boardState;\\n    }\\n\\n    function WhosTurn(uint256 matchId) public view returns (StoneType) {\\n        return matchIdToGS[matchId].turn;\\n    }\\n\\n    function IsOver(uint256 matchId) public view returns (bool) {\\n        return matchIdToGS[matchId].isOver;\\n    }\\n\\n\\n    function GetGameState(uint256 matchId) public view returns (GameState memory){\\n        return matchIdToGS[matchId];\\n    }\\n\\n    function MyPlayerState() public view returns (PlayerState memory) {\\n        return addressToPS[msg.sender];\\n    }\\n\\n    /* fall back function */\\n    fallback() external\\n    {\\n        \\n    }\\n}\\n\",\"keccak256\":\"0x097e157783af4127b9dff6f3905afc0e5eb212ca56107a7d43bbc9a23e5c876f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506200001c62000128565b6000604051806060016040528083815260200160028081111562000069577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600115158152509050806001600080815260200190815260200160002060008201518160000190610169620000a59291906200014c565b50602082015181600c0160006101000a81548160ff02191690836002811115620000f8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550604082015181600c0160016101000a81548160ff021916908315150217905550905050505062000243565b60405180612d20016040528061016990602082028036833780820191505090505090565b82610169601f01602090048101928215620002115791602002820160005b83821115620001e057835183826101000a81548160ff02191690836002811115620001be577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555092602001926001016020816000010492830192600103026200016a565b80156200020f5782816101000a81549060ff0219169055600101602081600001049283019260010302620001e0565b505b50905062000220919062000224565b5090565b5b808211156200023f57600081600090555060010162000225565b5090565b612c1180620002536000396000f3fe608060405234801561001057600080fd5b50600436106100815760003560e01c8063929ce1e71161005b578063929ce1e7146100ee578063947d9de61461011e578063b40aea9c1461013c578063f27f91f41461015857610082565b806303a504a51461008457806317d537ab146100b457806356f39089146100be57610082565b5b005b61009e60048036038101906100999190612406565b610188565b6040516100ab9190612753565b60405180910390f35b6100bc6101b5565b005b6100d860048036038101906100d39190612406565b610414565b6040516100e59190612738565b60405180910390f35b61010860048036038101906101039190612406565b610441565b604051610115919061276e565b60405180910390f35b6101266105b2565b604051610133919061278a565b60405180910390f35b6101566004803603810190610151919061242f565b6106b5565b005b610172600480360381019061016d9190612406565b611a7e565b60405161017f919061271c565b60405180910390f35b600060016000838152602001908152602001600020600c0160009054906101000a900460ff169050919050565b60008080548060200260200160405190810160405280929190818152602001828054801561023857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116101ee575b505050505090506000815114156102b1576000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610410565b60018151141561040f573373ffffffffffffffffffffffffffffffffffffffff168160008151811061030c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1614156103365750610412565b600061038382600081518110610375577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015133611b3c565b9050807fc8180a8ee09fc569927768d3d1f03623b0a7285e443513d6085410c1a36436a3836000815181106103e1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151336040516103f89291906126f3565b60405180910390a260008061040d9190612178565b505b5b505b565b600060016000838152602001908152602001600020600c0160019054906101000a900460ff169050919050565b610449612199565b60016000838152602001908152602001600020604051806060016040529081600082016101698060200260405190810160405280929190826101698015610500576020028201916000905b82829054906101000a900460ff1660028111156104da577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200190600101906020826000010492830192600103820291508084116104945790505b50505050508152602001600c820160009054906101000a900460ff166002811115610554577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600281111561058c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600c820160019054906101000a900460ff1615151515815250509050919050565b6105ba6121fa565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900460ff16600281111561064f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115610687577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600182015481526020016002820160009054906101000a900460ff161515151581525050905090565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900460ff16600281111561074c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115610784577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600182015481526020016002820160009054906101000a900460ff16151515158152505090506000816020015114156107ee576040517f0e9a606400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060016000836020015181526020019081526020016000206040518060600160405290816000820161016980602002604051908101604052809291908261016980156108ab576020028201916000905b82829054906101000a900460ff166002811115610885577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001906001019060208260000104928301926001038202915080841161083f5790505b50505050508152602001600c820160009054906101000a900460ff1660028111156108ff577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115610937577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600c820160019054906101000a900460ff1615151515815250509050806040015115610994576040517f52c9b99c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b816000015160028111156109d1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81602001516002811115610a0e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610a45576040517f34cc6b6600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008560ff161080610a5b575060138560ff1610155b80610a78575060008460ff161080610a77575060138460ff1610155b5b80610b57575060006002811115610ab8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816000015160138660ff16610acd91906128f3565b8760ff16610adb9190612884565b61ffff166101698110610b17577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201516002811115610b54577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14155b15610b8e576040517f33984b1d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600001516001600084602001518152602001908152602001600020600001601386610bba919061292f565b87610bc591906128bc565b60ff166101698110610c00577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602091828204019190066101000a81548160ff02191690836002811115610c50577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550600280811115610c8e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b82600001516002811115610ccb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610cd7576002610cda565b60015b6001600084602001518152602001908152602001600020600c0160006101000a81548160ff02191690836002811115610d3c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555081602001517f453d704a20a3df7c9ae4cff3c0661ec7a0cd8494f38d14d9506ae7a402957fbd60405160405180910390a28215611a7757610d80612255565b6000604051806101000160405280604051806080016040528060405180604001604052806000800b60000b8152602001600160000b60000b815250815260200160405180604001604052806000800b60000b8152602001600260000b60000b815250815260200160405180604001604052806000800b60000b8152602001600360000b60000b815250815260200160405180604001604052806000800b60000b8152602001600460000b60000b815250815250815260200160405180608001604052806040518060400160405280600160000b60000b8152602001600160000b60000b81525081526020016040518060400160405280600260000b60000b8152602001600260000b60000b81525081526020016040518060400160405280600360000b60000b8152602001600360000b60000b81525081526020016040518060400160405280600460000b60000b8152602001600460000b60000b815250815250815260200160405180608001604052806040518060400160405280600160000b60000b81526020016000800b60000b81525081526020016040518060400160405280600260000b60000b81526020016000800b60000b81525081526020016040518060400160405280600360000b60000b81526020016000800b60000b81525081526020016040518060400160405280600460000b60000b81526020016000800b60000b815250815250815260200160405180608001604052806040518060400160405280600160000b60000b81526020017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60000b60000b81525081526020016040518060400160405280600260000b60000b81526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60000b60000b81525081526020016040518060400160405280600360000b60000b81526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd60000b60000b81525081526020016040518060400160405280600460000b60000b81526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60000b60000b8152508152508152602001604051806080016040528060405180604001604052806000800b60000b81526020017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60000b60000b815250815260200160405180604001604052806000800b60000b81526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60000b60000b815250815260200160405180604001604052806000800b60000b81526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd60000b60000b815250815260200160405180604001604052806000800b60000b81526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60000b60000b8152508152508152602001604051806080016040528060405180604001604052807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60000b60000b81526020017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60000b60000b815250815260200160405180604001604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60000b60000b81526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60000b60000b815250815260200160405180604001604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd60000b60000b81526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd60000b60000b815250815260200160405180604001604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60000b60000b81526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60000b60000b8152508152508152602001604051806080016040528060405180604001604052807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60000b60000b81526020016000800b60000b815250815260200160405180604001604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60000b60000b81526020016000800b60000b815250815260200160405180604001604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd60000b60000b81526020016000800b60000b815250815260200160405180604001604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60000b60000b81526020016000800b60000b8152508152508152602001604051806080016040528060405180604001604052807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60000b60000b8152602001600160000b60000b815250815260200160405180604001604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60000b60000b8152602001600260000b60000b815250815260200160405180604001604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd60000b60000b8152602001600360000b60000b815250815260200160405180604001604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60000b60000b8152602001600460000b60000b815250815250815250905060005b60088160ff16101561193b5760005b60048160ff161015611927576000838360ff1660088110611632577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201518260ff1660048110611672577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201516000600281106116b0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201518a6116c0919061280f565b90506000848460ff1660088110611700577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201518360ff1660048110611740577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002015160016002811061177e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201518a61178e919061280f565b905060008260000b12806117a6575060138260000b12155b806117b4575060008160000b125b806117c3575060138160000b12155b156117cf575050611927565b8760000151600281111561180c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b87600001518260ff16601361182191906128f3565b8460ff1661182f9190612884565b61ffff16610169811061186b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002015160028111156118a8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561190b57858460ff16600881106118ea577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020180518091906118fc90612a79565b60ff1660ff1681525050611912565b5050611927565b5050808061191f90612a79565b9150506115e8565b50808061193390612a79565b9150506115d9565b5060005b60048160ff161015611a735760048360048361195b91906128bc565b60ff1660088110611995577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151848360ff16600881106119d6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201516119e591906128bc565b60ff1610611a6057600180600087602001518152602001908152602001600020600c0160016101000a81548160ff02191690831515021790555084602001517f668ce4ca171dee87d4d9d2b5d3dc31963fe7fbe50b982064dddb0fb9d56aee8b33604051611a5391906126d8565b60405180910390a2611a73565b8080611a6b90612a79565b91505061193f565b5050505b5050505050565b611a86612278565b600160008381526020019081526020016000206000016101698060200260405190810160405280929190826101698015611b30576020028201916000905b82829054906101000a900460ff166002811115611b0a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020019060010190602082600001049283019260010382029150808411611ac45790505b50505050509050919050565b6000611b46612278565b60006040518060600160405280838152602001600280811115611b92577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200160001515815250905080600160006003600081819054906101000a900463ffffffff16611bc390612a4c565b91906101000a81548163ffffffff021916908363ffffffff160217905563ffffffff16815260200190815260200160002060008201518160000190610169611c0c92919061229c565b50602082015181600c0160006101000a81548160ff02191690836002811115611c5e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550604082015181600c0160016101000a81548160ff0219169083151502179055509050506000611c928686611f40565b9050600081611ca2576001611ca5565b60025b9050600082611cb5576002611cb8565b60015b90506040518060600160405280836002811115611cfe577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600360009054906101000a900463ffffffff1663ffffffff16815260200160011515815250600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff02191690836002811115611db8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506020820151816001015560408201518160020160006101000a81548160ff0219169083151502179055509050506040518060600160405280826002811115611e2e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600360009054906101000a900463ffffffff1663ffffffff16815260200160011515815250600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff02191690836002811115611ee8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506020820151816001015560408201518160020160006101000a81548160ff021916908315150217905550905050600360009054906101000a900463ffffffff1663ffffffff169550505050505092915050565b6000806002735FbDB2315678afecb367f032d93F642f64180aa3635edb2fb3426040518263ffffffff1660e01b8152600401611f7c91906127a5565b60206040518083038186803b158015611f9457600080fd5b505af4158015611fa8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fcc91906123dd565b735FbDB2315678afecb367f032d93F642f64180aa36382c947b7866040518263ffffffff1660e01b815260040161200391906126bd565b60206040518083038186803b15801561201b57600080fd5b505af415801561202f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061205391906123dd565b735FbDB2315678afecb367f032d93F642f64180aa36382c947b7886040518263ffffffff1660e01b815260040161208a91906126bd565b60206040518083038186803b1580156120a257600080fd5b505af41580156120b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120da91906123dd565b18186040516020016120ec919061268b565b60405160208183030381529060405260405161210891906126a6565b602060405180830381855afa158015612125573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061214891906123dd565b9050600060028260001c61215c9190612aad565b141561216c576001915050612172565b60009150505b92915050565b5080546000825590600052602060002090810190612196919061236c565b50565b60405180606001604052806121ac612278565b8152602001600060028111156121eb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020016000151581525090565b60405180606001604052806000600281111561223f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600081526020016000151581525090565b604051806101000160405280600890602082028036833780820191505090505090565b60405180612d20016040528061016990602082028036833780820191505090505090565b82610169601f0160209004810192821561235b5791602002820160005b8382111561232c57835183826101000a81548160ff0219169083600281111561230b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555092602001926001016020816000010492830192600103026122b9565b80156123595782816101000a81549060ff021916905560010160208160000104928301926001030261232c565b505b509050612368919061236c565b5090565b5b8082111561238557600081600090555060010161236d565b5090565b60008135905061239881612b7f565b92915050565b6000815190506123ad81612b96565b92915050565b6000813590506123c281612bad565b92915050565b6000813590506123d781612bc4565b92915050565b6000602082840312156123ef57600080fd5b60006123fd8482850161239e565b91505092915050565b60006020828403121561241857600080fd5b6000612426848285016123b3565b91505092915050565b60008060006060848603121561244457600080fd5b6000612452868287016123c8565b9350506020612463868287016123c8565b925050604061247486828701612389565b9150509250925092565b600061248a83836125c8565b60208301905092915050565b61249f8161296a565b82525050565b6124ae8161296a565b82525050565b6124bd816127ca565b6124c781846127ee565b92506124d2826127c0565b8060005b838110156125035781516124ea878261247e565b96506124f5836127e1565b9250506001810190506124d6565b505050505050565b612514816127ca565b61251e81846127f9565b9250612529826127c0565b8060005b8381101561255a578151612541878261247e565b965061254c836127e1565b92505060018101905061252d565b505050505050565b61256b8161297c565b82525050565b61257a8161297c565b82525050565b61259161258c82612988565b612aa3565b82525050565b60006125a2826127d6565b6125ac8185612804565b93506125bc818560208601612a19565b80840191505092915050565b6125d181612a07565b82525050565b6125e081612a07565b82525050565b612d60820160008201516125fd60008501826124b4565b506020820151612611612d208501826125c8565b506040820151612625612d40850182612562565b50505050565b60608201600082015161264160008501826125c8565b506020820151612654602085018261266d565b5060408201516126676040850182612562565b50505050565b612676816129e0565b82525050565b612685816129e0565b82525050565b60006126978284612580565b60208201915081905092915050565b60006126b28284612597565b915081905092915050565b60006020820190506126d260008301846124a5565b92915050565b60006020820190506126ed6000830184612496565b92915050565b60006040820190506127086000830185612496565b6127156020830184612496565b9392505050565b6000612d2082019050612732600083018461250b565b92915050565b600060208201905061274d6000830184612571565b92915050565b600060208201905061276860008301846125d7565b92915050565b6000612d608201905061278460008301846125e6565b92915050565b600060608201905061279f600083018461262b565b92915050565b60006020820190506127ba600083018461267c565b92915050565b6000819050919050565b60006101699050919050565b600081519050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600081905092915050565b600061281a826129a5565b9150612825836129a5565b925081607f0383136000831215161561284157612840612ade565b5b817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8003831260008312161561287957612878612ade565b5b828201905092915050565b600061288f826129b2565b915061289a836129b2565b92508261ffff038211156128b1576128b0612ade565b5b828201905092915050565b60006128c7826129fa565b91506128d2836129fa565b92508260ff038211156128e8576128e7612ade565b5b828201905092915050565b60006128fe826129b2565b9150612909836129b2565b92508161ffff048311821515161561292457612923612ade565b5b828202905092915050565b600061293a826129fa565b9150612945836129fa565b92508160ff048311821515161561295f5761295e612ade565b5b828202905092915050565b6000612975826129c0565b9050919050565b60008115159050919050565b6000819050919050565b60008190506129a082612b6b565b919050565b60008160000b9050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600060ff82169050919050565b6000612a1282612992565b9050919050565b60005b83811015612a37578082015181840152602081019050612a1c565b83811115612a46576000848401525b50505050565b6000612a57826129ea565b915063ffffffff821415612a6e57612a6d612ade565b5b600182019050919050565b6000612a84826129fa565b915060ff821415612a9857612a97612ade565b5b600182019050919050565b6000819050919050565b6000612ab8826129e0565b9150612ac3836129e0565b925082612ad357612ad2612b0d565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110612b7c57612b7b612b3c565b5b50565b612b888161297c565b8114612b9357600080fd5b50565b612b9f81612988565b8114612baa57600080fd5b50565b612bb6816129e0565b8114612bc157600080fd5b50565b612bcd816129fa565b8114612bd857600080fd5b5056fea26469706673582212200662d92e8199f012bd4bde14cb05278c9c6e3b605ea77b9d2f18fb9f74eb2af864736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100815760003560e01c8063929ce1e71161005b578063929ce1e7146100ee578063947d9de61461011e578063b40aea9c1461013c578063f27f91f41461015857610082565b806303a504a51461008457806317d537ab146100b457806356f39089146100be57610082565b5b005b61009e60048036038101906100999190612406565b610188565b6040516100ab9190612753565b60405180910390f35b6100bc6101b5565b005b6100d860048036038101906100d39190612406565b610414565b6040516100e59190612738565b60405180910390f35b61010860048036038101906101039190612406565b610441565b604051610115919061276e565b60405180910390f35b6101266105b2565b604051610133919061278a565b60405180910390f35b6101566004803603810190610151919061242f565b6106b5565b005b610172600480360381019061016d9190612406565b611a7e565b60405161017f919061271c565b60405180910390f35b600060016000838152602001908152602001600020600c0160009054906101000a900460ff169050919050565b60008080548060200260200160405190810160405280929190818152602001828054801561023857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116101ee575b505050505090506000815114156102b1576000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610410565b60018151141561040f573373ffffffffffffffffffffffffffffffffffffffff168160008151811061030c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1614156103365750610412565b600061038382600081518110610375577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015133611b3c565b9050807fc8180a8ee09fc569927768d3d1f03623b0a7285e443513d6085410c1a36436a3836000815181106103e1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151336040516103f89291906126f3565b60405180910390a260008061040d9190612178565b505b5b505b565b600060016000838152602001908152602001600020600c0160019054906101000a900460ff169050919050565b610449612199565b60016000838152602001908152602001600020604051806060016040529081600082016101698060200260405190810160405280929190826101698015610500576020028201916000905b82829054906101000a900460ff1660028111156104da577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200190600101906020826000010492830192600103820291508084116104945790505b50505050508152602001600c820160009054906101000a900460ff166002811115610554577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600281111561058c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600c820160019054906101000a900460ff1615151515815250509050919050565b6105ba6121fa565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900460ff16600281111561064f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115610687577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600182015481526020016002820160009054906101000a900460ff161515151581525050905090565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900460ff16600281111561074c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115610784577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600182015481526020016002820160009054906101000a900460ff16151515158152505090506000816020015114156107ee576040517f0e9a606400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060016000836020015181526020019081526020016000206040518060600160405290816000820161016980602002604051908101604052809291908261016980156108ab576020028201916000905b82829054906101000a900460ff166002811115610885577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001906001019060208260000104928301926001038202915080841161083f5790505b50505050508152602001600c820160009054906101000a900460ff1660028111156108ff577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115610937577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600c820160019054906101000a900460ff1615151515815250509050806040015115610994576040517f52c9b99c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b816000015160028111156109d1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81602001516002811115610a0e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610a45576040517f34cc6b6600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008560ff161080610a5b575060138560ff1610155b80610a78575060008460ff161080610a77575060138460ff1610155b5b80610b57575060006002811115610ab8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816000015160138660ff16610acd91906128f3565b8760ff16610adb9190612884565b61ffff166101698110610b17577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201516002811115610b54577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14155b15610b8e576040517f33984b1d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600001516001600084602001518152602001908152602001600020600001601386610bba919061292f565b87610bc591906128bc565b60ff166101698110610c00577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602091828204019190066101000a81548160ff02191690836002811115610c50577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550600280811115610c8e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b82600001516002811115610ccb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610cd7576002610cda565b60015b6001600084602001518152602001908152602001600020600c0160006101000a81548160ff02191690836002811115610d3c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555081602001517f453d704a20a3df7c9ae4cff3c0661ec7a0cd8494f38d14d9506ae7a402957fbd60405160405180910390a28215611a7757610d80612255565b6000604051806101000160405280604051806080016040528060405180604001604052806000800b60000b8152602001600160000b60000b815250815260200160405180604001604052806000800b60000b8152602001600260000b60000b815250815260200160405180604001604052806000800b60000b8152602001600360000b60000b815250815260200160405180604001604052806000800b60000b8152602001600460000b60000b815250815250815260200160405180608001604052806040518060400160405280600160000b60000b8152602001600160000b60000b81525081526020016040518060400160405280600260000b60000b8152602001600260000b60000b81525081526020016040518060400160405280600360000b60000b8152602001600360000b60000b81525081526020016040518060400160405280600460000b60000b8152602001600460000b60000b815250815250815260200160405180608001604052806040518060400160405280600160000b60000b81526020016000800b60000b81525081526020016040518060400160405280600260000b60000b81526020016000800b60000b81525081526020016040518060400160405280600360000b60000b81526020016000800b60000b81525081526020016040518060400160405280600460000b60000b81526020016000800b60000b815250815250815260200160405180608001604052806040518060400160405280600160000b60000b81526020017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60000b60000b81525081526020016040518060400160405280600260000b60000b81526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60000b60000b81525081526020016040518060400160405280600360000b60000b81526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd60000b60000b81525081526020016040518060400160405280600460000b60000b81526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60000b60000b8152508152508152602001604051806080016040528060405180604001604052806000800b60000b81526020017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60000b60000b815250815260200160405180604001604052806000800b60000b81526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60000b60000b815250815260200160405180604001604052806000800b60000b81526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd60000b60000b815250815260200160405180604001604052806000800b60000b81526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60000b60000b8152508152508152602001604051806080016040528060405180604001604052807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60000b60000b81526020017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60000b60000b815250815260200160405180604001604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60000b60000b81526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60000b60000b815250815260200160405180604001604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd60000b60000b81526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd60000b60000b815250815260200160405180604001604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60000b60000b81526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60000b60000b8152508152508152602001604051806080016040528060405180604001604052807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60000b60000b81526020016000800b60000b815250815260200160405180604001604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60000b60000b81526020016000800b60000b815250815260200160405180604001604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd60000b60000b81526020016000800b60000b815250815260200160405180604001604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60000b60000b81526020016000800b60000b8152508152508152602001604051806080016040528060405180604001604052807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60000b60000b8152602001600160000b60000b815250815260200160405180604001604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60000b60000b8152602001600260000b60000b815250815260200160405180604001604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd60000b60000b8152602001600360000b60000b815250815260200160405180604001604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60000b60000b8152602001600460000b60000b815250815250815250905060005b60088160ff16101561193b5760005b60048160ff161015611927576000838360ff1660088110611632577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201518260ff1660048110611672577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201516000600281106116b0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201518a6116c0919061280f565b90506000848460ff1660088110611700577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201518360ff1660048110611740577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002015160016002811061177e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201518a61178e919061280f565b905060008260000b12806117a6575060138260000b12155b806117b4575060008160000b125b806117c3575060138160000b12155b156117cf575050611927565b8760000151600281111561180c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b87600001518260ff16601361182191906128f3565b8460ff1661182f9190612884565b61ffff16610169811061186b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002015160028111156118a8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561190b57858460ff16600881106118ea577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020180518091906118fc90612a79565b60ff1660ff1681525050611912565b5050611927565b5050808061191f90612a79565b9150506115e8565b50808061193390612a79565b9150506115d9565b5060005b60048160ff161015611a735760048360048361195b91906128bc565b60ff1660088110611995577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151848360ff16600881106119d6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201516119e591906128bc565b60ff1610611a6057600180600087602001518152602001908152602001600020600c0160016101000a81548160ff02191690831515021790555084602001517f668ce4ca171dee87d4d9d2b5d3dc31963fe7fbe50b982064dddb0fb9d56aee8b33604051611a5391906126d8565b60405180910390a2611a73565b8080611a6b90612a79565b91505061193f565b5050505b5050505050565b611a86612278565b600160008381526020019081526020016000206000016101698060200260405190810160405280929190826101698015611b30576020028201916000905b82829054906101000a900460ff166002811115611b0a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020019060010190602082600001049283019260010382029150808411611ac45790505b50505050509050919050565b6000611b46612278565b60006040518060600160405280838152602001600280811115611b92577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200160001515815250905080600160006003600081819054906101000a900463ffffffff16611bc390612a4c565b91906101000a81548163ffffffff021916908363ffffffff160217905563ffffffff16815260200190815260200160002060008201518160000190610169611c0c92919061229c565b50602082015181600c0160006101000a81548160ff02191690836002811115611c5e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550604082015181600c0160016101000a81548160ff0219169083151502179055509050506000611c928686611f40565b9050600081611ca2576001611ca5565b60025b9050600082611cb5576002611cb8565b60015b90506040518060600160405280836002811115611cfe577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600360009054906101000a900463ffffffff1663ffffffff16815260200160011515815250600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff02191690836002811115611db8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506020820151816001015560408201518160020160006101000a81548160ff0219169083151502179055509050506040518060600160405280826002811115611e2e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600360009054906101000a900463ffffffff1663ffffffff16815260200160011515815250600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff02191690836002811115611ee8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506020820151816001015560408201518160020160006101000a81548160ff021916908315150217905550905050600360009054906101000a900463ffffffff1663ffffffff169550505050505092915050565b600080600273__$a74ec4f9c45ea3e03fb5242c6921c0f692$__635edb2fb3426040518263ffffffff1660e01b8152600401611f7c91906127a5565b60206040518083038186803b158015611f9457600080fd5b505af4158015611fa8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fcc91906123dd565b73__$a74ec4f9c45ea3e03fb5242c6921c0f692$__6382c947b7866040518263ffffffff1660e01b815260040161200391906126bd565b60206040518083038186803b15801561201b57600080fd5b505af415801561202f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061205391906123dd565b73__$a74ec4f9c45ea3e03fb5242c6921c0f692$__6382c947b7886040518263ffffffff1660e01b815260040161208a91906126bd565b60206040518083038186803b1580156120a257600080fd5b505af41580156120b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120da91906123dd565b18186040516020016120ec919061268b565b60405160208183030381529060405260405161210891906126a6565b602060405180830381855afa158015612125573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061214891906123dd565b9050600060028260001c61215c9190612aad565b141561216c576001915050612172565b60009150505b92915050565b5080546000825590600052602060002090810190612196919061236c565b50565b60405180606001604052806121ac612278565b8152602001600060028111156121eb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020016000151581525090565b60405180606001604052806000600281111561223f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600081526020016000151581525090565b604051806101000160405280600890602082028036833780820191505090505090565b60405180612d20016040528061016990602082028036833780820191505090505090565b82610169601f0160209004810192821561235b5791602002820160005b8382111561232c57835183826101000a81548160ff0219169083600281111561230b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555092602001926001016020816000010492830192600103026122b9565b80156123595782816101000a81549060ff021916905560010160208160000104928301926001030261232c565b505b509050612368919061236c565b5090565b5b8082111561238557600081600090555060010161236d565b5090565b60008135905061239881612b7f565b92915050565b6000815190506123ad81612b96565b92915050565b6000813590506123c281612bad565b92915050565b6000813590506123d781612bc4565b92915050565b6000602082840312156123ef57600080fd5b60006123fd8482850161239e565b91505092915050565b60006020828403121561241857600080fd5b6000612426848285016123b3565b91505092915050565b60008060006060848603121561244457600080fd5b6000612452868287016123c8565b9350506020612463868287016123c8565b925050604061247486828701612389565b9150509250925092565b600061248a83836125c8565b60208301905092915050565b61249f8161296a565b82525050565b6124ae8161296a565b82525050565b6124bd816127ca565b6124c781846127ee565b92506124d2826127c0565b8060005b838110156125035781516124ea878261247e565b96506124f5836127e1565b9250506001810190506124d6565b505050505050565b612514816127ca565b61251e81846127f9565b9250612529826127c0565b8060005b8381101561255a578151612541878261247e565b965061254c836127e1565b92505060018101905061252d565b505050505050565b61256b8161297c565b82525050565b61257a8161297c565b82525050565b61259161258c82612988565b612aa3565b82525050565b60006125a2826127d6565b6125ac8185612804565b93506125bc818560208601612a19565b80840191505092915050565b6125d181612a07565b82525050565b6125e081612a07565b82525050565b612d60820160008201516125fd60008501826124b4565b506020820151612611612d208501826125c8565b506040820151612625612d40850182612562565b50505050565b60608201600082015161264160008501826125c8565b506020820151612654602085018261266d565b5060408201516126676040850182612562565b50505050565b612676816129e0565b82525050565b612685816129e0565b82525050565b60006126978284612580565b60208201915081905092915050565b60006126b28284612597565b915081905092915050565b60006020820190506126d260008301846124a5565b92915050565b60006020820190506126ed6000830184612496565b92915050565b60006040820190506127086000830185612496565b6127156020830184612496565b9392505050565b6000612d2082019050612732600083018461250b565b92915050565b600060208201905061274d6000830184612571565b92915050565b600060208201905061276860008301846125d7565b92915050565b6000612d608201905061278460008301846125e6565b92915050565b600060608201905061279f600083018461262b565b92915050565b60006020820190506127ba600083018461267c565b92915050565b6000819050919050565b60006101699050919050565b600081519050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600081905092915050565b600061281a826129a5565b9150612825836129a5565b925081607f0383136000831215161561284157612840612ade565b5b817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8003831260008312161561287957612878612ade565b5b828201905092915050565b600061288f826129b2565b915061289a836129b2565b92508261ffff038211156128b1576128b0612ade565b5b828201905092915050565b60006128c7826129fa565b91506128d2836129fa565b92508260ff038211156128e8576128e7612ade565b5b828201905092915050565b60006128fe826129b2565b9150612909836129b2565b92508161ffff048311821515161561292457612923612ade565b5b828202905092915050565b600061293a826129fa565b9150612945836129fa565b92508160ff048311821515161561295f5761295e612ade565b5b828202905092915050565b6000612975826129c0565b9050919050565b60008115159050919050565b6000819050919050565b60008190506129a082612b6b565b919050565b60008160000b9050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600060ff82169050919050565b6000612a1282612992565b9050919050565b60005b83811015612a37578082015181840152602081019050612a1c565b83811115612a46576000848401525b50505050565b6000612a57826129ea565b915063ffffffff821415612a6e57612a6d612ade565b5b600182019050919050565b6000612a84826129fa565b915060ff821415612a9857612a97612ade565b5b600182019050919050565b6000819050919050565b6000612ab8826129e0565b9150612ac3836129e0565b925082612ad357612ad2612b0d565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110612b7c57612b7b612b3c565b5b50565b612b888161297c565b8114612b9357600080fd5b50565b612b9f81612988565b8114612baa57600080fd5b50565b612bb6816129e0565b8114612bc157600080fd5b50565b612bcd816129fa565b8114612bd857600080fd5b5056fea26469706673582212200662d92e8199f012bd4bde14cb05278c9c6e3b605ea77b9d2f18fb9f74eb2af864736f6c63430008040033",
  "libraries": {
    "Convert": "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  },
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 137,
        "contract": "contracts/GoGame.sol:GoGame",
        "label": "matchQueue",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 142,
        "contract": "contracts/GoGame.sol:GoGame",
        "label": "matchIdToGS",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(GameState)108_storage)"
      },
      {
        "astId": 147,
        "contract": "contracts/GoGame.sol:GoGame",
        "label": "addressToPS",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_struct(PlayerState)116_storage)"
      },
      {
        "astId": 149,
        "contract": "contracts/GoGame.sol:GoGame",
        "label": "matchCnt",
        "offset": 0,
        "slot": "3",
        "type": "t_uint32"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_enum(StoneType)95)361_storage": {
        "base": "t_enum(StoneType)95",
        "encoding": "inplace",
        "label": "enum GoGame.StoneType[361]",
        "numberOfBytes": "384"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(StoneType)95": {
        "encoding": "inplace",
        "label": "enum GoGame.StoneType",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(PlayerState)116_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct GoGame.PlayerState)",
        "numberOfBytes": "32",
        "value": "t_struct(PlayerState)116_storage"
      },
      "t_mapping(t_uint256,t_struct(GameState)108_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct GoGame.GameState)",
        "numberOfBytes": "32",
        "value": "t_struct(GameState)108_storage"
      },
      "t_struct(GameState)108_storage": {
        "encoding": "inplace",
        "label": "struct GoGame.GameState",
        "members": [
          {
            "astId": 102,
            "contract": "contracts/GoGame.sol:GoGame",
            "label": "boardState",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_enum(StoneType)95)361_storage"
          },
          {
            "astId": 105,
            "contract": "contracts/GoGame.sol:GoGame",
            "label": "turn",
            "offset": 0,
            "slot": "12",
            "type": "t_enum(StoneType)95"
          },
          {
            "astId": 107,
            "contract": "contracts/GoGame.sol:GoGame",
            "label": "isOver",
            "offset": 1,
            "slot": "12",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "416"
      },
      "t_struct(PlayerState)116_storage": {
        "encoding": "inplace",
        "label": "struct GoGame.PlayerState",
        "members": [
          {
            "astId": 111,
            "contract": "contracts/GoGame.sol:GoGame",
            "label": "stoneType",
            "offset": 0,
            "slot": "0",
            "type": "t_enum(StoneType)95"
          },
          {
            "astId": 113,
            "contract": "contracts/GoGame.sol:GoGame",
            "label": "matchId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 115,
            "contract": "contracts/GoGame.sol:GoGame",
            "label": "inGame",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      }
    }
  }
}