{
  "address": "0x32069122aE7F1AFc81C81F10ed0E57596AFB1274",
  "abi": [
    {
      "inputs": [],
      "name": "GoGame__GameIsOver",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "GoGame__InvalidPlacing",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "GoGame__IsNotYourTurn",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "GoGame__PlayerDontHaveMatch",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "matchId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "player1",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "player2",
          "type": "address"
        }
      ],
      "name": "FindMatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "matchId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "winner",
          "type": "address"
        }
      ],
      "name": "GameOver",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "matchId",
          "type": "uint256"
        }
      ],
      "name": "GameStateChange",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "matchId",
          "type": "uint256"
        }
      ],
      "name": "BoardState",
      "outputs": [
        {
          "internalType": "enum GoGame.StoneType[361]",
          "name": "",
          "type": "uint8[361]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MyPlayerState",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum GoGame.StoneType",
              "name": "stoneType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "matchId",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "inGame",
              "type": "bool"
            }
          ],
          "internalType": "struct GoGame.PlayerState",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "x",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "y",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "checkWin",
          "type": "bool"
        }
      ],
      "name": "PlaceStone",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "matchId",
          "type": "uint256"
        }
      ],
      "name": "WhosTurn",
      "outputs": [
        {
          "internalType": "enum GoGame.StoneType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requestMatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x2b0929a25fce8fbbff955b65ecea15e6a628d5ef4b92e5b1eb5ab1b5b215e2f8",
  "receipt": {
    "to": null,
    "from": "0xC409A859ce7FeDc3d7c629a496EdbF94697fCDBa",
    "contractAddress": "0x32069122aE7F1AFc81C81F10ed0E57596AFB1274",
    "transactionIndex": 10,
    "gasUsed": "2278371",
    "logsBloom": "0x
    "blockHash": "0xa205cf23caffc4a93be7d1e4bc06a059755c0ca8c2048ad18e563a92c0e37098",
    "transactionHash": "0x2b0929a25fce8fbbff955b65ecea15e6a628d5ef4b92e5b1eb5ab1b5b215e2f8",
    "logs": [],
    "blockNumber": 10949360,
    "cumulativeGasUsed": "3267731",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 8,
  "solcInputHash": "a9108906dcb7e951baba5dd98dd399ca",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"GoGame__GameIsOver\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GoGame__InvalidPlacing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GoGame__IsNotYourTurn\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GoGame__PlayerDontHaveMatch\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"matchId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player2\",\"type\":\"address\"}],\"name\":\"FindMatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"matchId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"GameOver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"matchId\",\"type\":\"uint256\"}],\"name\":\"GameStateChange\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"matchId\",\"type\":\"uint256\"}],\"name\":\"BoardState\",\"outputs\":[{\"internalType\":\"enum GoGame.StoneType[361]\",\"name\":\"\",\"type\":\"uint8[361]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MyPlayerState\",\"outputs\":[{\"components\":[{\"internalType\":\"enum GoGame.StoneType\",\"name\":\"stoneType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"matchId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"inGame\",\"type\":\"bool\"}],\"internalType\":\"struct GoGame.PlayerState\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"x\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"y\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"checkWin\",\"type\":\"bool\"}],\"name\":\"PlaceStone\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"matchId\",\"type\":\"uint256\"}],\"name\":\"WhosTurn\",\"outputs\":[{\"internalType\":\"enum GoGame.StoneType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestMatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GoGame.sol\":\"GoGame\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Convert.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nlibrary Convert {\\n  function addressToUint256(address a) public pure returns (uint256) {\\n    return uint256(uint160(a));\\n  }\\n\\n  function addressToBytes32(address add) public pure returns (bytes32) {\\n    return uint256ToBytes32(addressToUint256(add));\\n  }\\n\\n  function uint256ToBytes32(uint256 num) public pure returns (bytes32) {\\n    bytes memory addBytes = abi.encodePacked(num);\\n    bytes32 out;\\n    for (uint256 i = 0; i < 32; i++) {\\n      out |= bytes32(addBytes[i] & 0xFF) >> (i * 8);\\n    }\\n    return out;\\n  }\\n}\\n\",\"keccak256\":\"0x2822cf815730646d1e575c5d15531142c7882ab61432707e1fe03c91b8dd6d8e\",\"license\":\"MIT\"},\"contracts/GoGame.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Convert.sol\\\";\\n\\nerror GoGame__PlayerDontHaveMatch();\\nerror GoGame__GameIsOver();\\nerror GoGame__IsNotYourTurn();\\nerror GoGame__InvalidPlacing();\\n\\ncontract GoGame {\\n    enum StoneType {\\n        None, // 0\\n        Black, // 1\\n        White // 2\\n    }\\n\\n    struct GameState {\\n        StoneType[19 * 19] boardState; // current board state\\n        StoneType turn; // whos turn is it now\\n        bool isOver;\\n    }\\n\\n    struct PlayerState {\\n        StoneType stoneType;\\n        uint256 matchId;\\n        bool inGame;\\n    }\\n\\n    event FindMatch(uint256 indexed matchId, address player1, address player2);\\n    event GameStateChange(uint256 indexed matchId);\\n    event GameOver(uint256 indexed matchId, address winner);\\n\\n    address[] matchQueue;\\n    mapping(uint256 => GameState) matchIdToGS; // index by match id\\n    mapping(address => PlayerState) addressToPS; // index by address\\n    uint32 matchCnt;\\n\\n    /* public & external function  */\\n\\n    function requestMatch() public {\\n        address[] memory mq = matchQueue;\\n        if (mq.length == 0) {\\n            matchQueue.push(msg.sender);\\n        } else if (mq.length == 1) {\\n            // check is in queue already\\n            if (mq[0] == msg.sender) return;\\n            // match\\n            // create new game\\n            uint256 matchId = createNewGame(mq[0], msg.sender);\\n            // emit event\\n            emit FindMatch(matchId, mq[0], msg.sender);\\n            // clear match queue\\n            delete matchQueue;\\n        }\\n    }\\n\\n    // player place stone\\n    function PlaceStone(\\n        uint8 x,\\n        uint8 y,\\n        bool checkWin\\n    ) public {\\n        // find out player match\\n        PlayerState memory ps = addressToPS[msg.sender];\\n        if (ps.matchId == 0) {\\n            revert GoGame__PlayerDontHaveMatch();\\n        }\\n        // check is game is not over and is player turn\\n        GameState memory gs = matchIdToGS[ps.matchId];\\n        if (gs.isOver) {\\n            revert GoGame__GameIsOver();\\n        }\\n        if (gs.turn != ps.stoneType) {\\n            revert GoGame__IsNotYourTurn();\\n        }\\n        // check place index is valid\\n        if (\\n            (x < 0 || x >= 19) ||\\n            (y < 0 || y >= 19) ||\\n            gs.boardState[x + y * 19] != StoneType.None\\n        ) {\\n            revert GoGame__InvalidPlacing();\\n        }\\n\\n        // place stone\\n        matchIdToGS[ps.matchId].boardState[x + y * 19] = ps.stoneType;\\n        matchIdToGS[ps.matchId].turn = ps.stoneType == StoneType.White\\n            ? StoneType.Black\\n            : StoneType.White;\\n        emit GameStateChange(ps.matchId);\\n\\n        if (checkWin) {\\n            // check win condition\\n            // 1. up -> right -> down -> left\\n            uint8[8] memory cnt;\\n            int8[2][4][8] memory vecs = [\\n                [\\n                    [int8(0), int8(1)],\\n                    [int8(0), int8(2)],\\n                    [int8(0), int8(3)],\\n                    [int8(0), int8(4)]\\n                ],\\n                [\\n                    [int8(1), int8(1)],\\n                    [int8(2), int8(2)],\\n                    [int8(3), int8(3)],\\n                    [int8(4), int8(4)]\\n                ],\\n                [\\n                    [int8(1), int8(0)],\\n                    [int8(2), int8(0)],\\n                    [int8(3), int8(0)],\\n                    [int8(4), int8(0)]\\n                ],\\n                [\\n                    [int8(1), int8(-1)],\\n                    [int8(2), int8(-2)],\\n                    [int8(3), int8(-3)],\\n                    [int8(4), int8(-4)]\\n                ],\\n                [\\n                    [int8(0), int8(-1)],\\n                    [int8(0), int8(-2)],\\n                    [int8(0), int8(-3)],\\n                    [int8(0), int8(-4)]\\n                ],\\n                [\\n                    [int8(-1), int8(-1)],\\n                    [int8(-2), int8(-2)],\\n                    [int8(-3), int8(-3)],\\n                    [int8(-4), int8(-4)]\\n                ],\\n                [\\n                    [int8(-1), int8(0)],\\n                    [int8(-2), int8(0)],\\n                    [int8(-3), int8(0)],\\n                    [int8(-4), int8(0)]\\n                ],\\n                [\\n                    [int8(-1), int8(1)],\\n                    [int8(-2), int8(2)],\\n                    [int8(-3), int8(3)],\\n                    [int8(-4), int8(4)]\\n                ]\\n            ];\\n\\n            for (uint8 i = 0; i < 8; i++) {\\n                for (uint8 j = 0; j < 4; j++) {\\n                    // checking index\\n                    int8 nx = int8(x) + vecs[i][j][0];\\n                    int8 ny = int8(y) + vecs[i][j][1];\\n                    // check out of bound\\n                    if (nx < 0 || nx >= 19 || ny < 0 || ny >= 19) break;\\n                    // if line is continuous\\n                    if (\\n                        gs.boardState[\\n                            uint16(uint8(nx)) + 19 * uint16(uint8(ny))\\n                        ] == ps.stoneType\\n                    ) {\\n                        // cnt add\\n                        cnt[i]++;\\n                    } else {\\n                        // this line is done\\n                        break;\\n                    }\\n                }\\n            }\\n\\n            // check have 5 in a line\\n            for (uint8 i = 0; i < 4; i++) {\\n                if (cnt[i] + cnt[i + 4] >= 4) {\\n                    // win\\n                    matchIdToGS[ps.matchId].isOver = true;\\n                    emit GameOver(ps.matchId, msg.sender);\\n                    break;\\n                }\\n            }\\n        }\\n    }\\n\\n    /* private & internal function */\\n\\n    function createNewGame(address p1, address p2)\\n        private\\n        returns (uint256 matchId)\\n    {\\n        // initial game state\\n        StoneType[361] memory boardState;\\n        GameState memory gs = GameState(boardState, StoneType.Black, false);\\n        // add to map\\n        matchIdToGS[++matchCnt] = gs;\\n        // decide who is white/black\\n        bool p1IsWhite = decideStoneType(p1, p2);\\n        // init player state\\n        StoneType p1Stone = p1IsWhite ? StoneType.White : StoneType.Black;\\n        StoneType p2Stone = p1IsWhite ? StoneType.Black : StoneType.White;\\n        // add to map\\n        addressToPS[p1] = PlayerState(p1Stone, matchCnt, true);\\n        addressToPS[p2] = PlayerState(p2Stone, matchCnt, true);\\n\\n        return matchCnt;\\n    }\\n\\n    function decideStoneType(address p1, address p2)\\n        private\\n        view\\n        returns (bool p1IsWhite)\\n    {\\n        bytes32 randomHash = sha256(\\n            abi.encodePacked(\\n                Convert.addressToBytes32(p1) ^\\n                    Convert.addressToBytes32(p2) ^\\n                    Convert.uint256ToBytes32(block.timestamp)\\n            )\\n        );\\n\\n        if (uint256(randomHash) % 2 == 0) {\\n            // p1 is white\\n            return true;\\n        } else {\\n            // p2 is white\\n            return false;\\n        }\\n    }\\n\\n    /* pure & view function */\\n    function BoardState(uint256 matchId)\\n        public\\n        view\\n        returns (StoneType[361] memory)\\n    {\\n        return matchIdToGS[matchId].boardState;\\n    }\\n\\n    function WhosTurn(uint256 matchId) public view returns (StoneType) {\\n        return matchIdToGS[matchId].turn;\\n    }\\n\\n    function MyPlayerState() public view returns (PlayerState memory) {\\n        return addressToPS[msg.sender];\\n    }\\n}\\n\",\"keccak256\":\"0x1412ef5ee2ec3fc846aafd6b49ed4c25b717e2e3a2a8d156e5b39f755794e7e7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50612897806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806303a504a51461005c57806317d537ab1461008c578063947d9de614610096578063b40aea9c146100b4578063f27f91f4146100d0575b600080fd5b61007660048036038101906100719190612179565b610100565b6040516100839190612400565b60405180910390f35b61009461012d565b005b61009e61038c565b6040516100ab919061241b565b60405180910390f35b6100ce60048036038101906100c991906121a2565b61048f565b005b6100ea60048036038101906100e59190612179565b611851565b6040516100f791906123e4565b60405180910390f35b600060016000838152602001908152602001600020600c0160009054906101000a900460ff169050919050565b6000808054806020026020016040519081016040528092919081815260200182805480156101b057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610166575b50505050509050600081511415610229576000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610388565b600181511415610387573373ffffffffffffffffffffffffffffffffffffffff1681600081518110610284577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1614156102ae575061038a565b60006102fb826000815181106102ed577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101513361190f565b9050807fc8180a8ee09fc569927768d3d1f03623b0a7285e443513d6085410c1a36436a383600081518110610359577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151336040516103709291906123bb565b60405180910390a26000806103859190611f4c565b505b5b505b565b610394611f6d565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900460ff166002811115610429577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115610461577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600182015481526020016002820160009054906101000a900460ff161515151581525050905090565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900460ff166002811115610526577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600281111561055e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600182015481526020016002820160009054906101000a900460ff16151515158152505090506000816020015114156105c8576040517f0e9a606400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006001600083602001518152602001908152602001600020604051806060016040529081600082016101698060200260405190810160405280929190826101698015610685576020028201916000905b82829054906101000a900460ff16600281111561065f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200190600101906020826000010492830192600103820291508084116106195790505b50505050508152602001600c820160009054906101000a900460ff1660028111156106d9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115610711577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600c820160019054906101000a900460ff161515151581525050905080604001511561076e576040517f52c9b99c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b816000015160028111156107ab577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816020015160028111156107e8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461081f576040517f34cc6b6600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008560ff161080610835575060138560ff1610155b80610852575060008460ff161080610851575060138460ff1610155b5b8061092a575060006002811115610892577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81600001516013866108a491906125b5565b876108af9190612542565b60ff1661016981106108ea577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201516002811115610927577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14155b15610961576040517f33984b1d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160000151600160008460200151815260200190815260200160002060000160138661098d91906125b5565b876109989190612542565b60ff1661016981106109d3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602091828204019190066101000a81548160ff02191690836002811115610a23577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550600280811115610a61577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b82600001516002811115610a9e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610aaa576002610aad565b60015b6001600084602001518152602001908152602001600020600c0160006101000a81548160ff02191690836002811115610b0f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555081602001517f453d704a20a3df7c9ae4cff3c0661ec7a0cd8494f38d14d9506ae7a402957fbd60405160405180910390a2821561184a57610b53611fc8565b6000604051806101000160405280604051806080016040528060405180604001604052806000800b60000b8152602001600160000b60000b815250815260200160405180604001604052806000800b60000b8152602001600260000b60000b815250815260200160405180604001604052806000800b60000b8152602001600360000b60000b815250815260200160405180604001604052806000800b60000b8152602001600460000b60000b815250815250815260200160405180608001604052806040518060400160405280600160000b60000b8152602001600160000b60000b81525081526020016040518060400160405280600260000b60000b8152602001600260000b60000b81525081526020016040518060400160405280600360000b60000b8152602001600360000b60000b81525081526020016040518060400160405280600460000b60000b8152602001600460000b60000b815250815250815260200160405180608001604052806040518060400160405280600160000b60000b81526020016000800b60000b81525081526020016040518060400160405280600260000b60000b81526020016000800b60000b81525081526020016040518060400160405280600360000b60000b81526020016000800b60000b81525081526020016040518060400160405280600460000b60000b81526020016000800b60000b815250815250815260200160405180608001604052806040518060400160405280600160000b60000b81526020017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60000b60000b81525081526020016040518060400160405280600260000b60000b81526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60000b60000b81525081526020016040518060400160405280600360000b60000b81526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd60000b60000b81525081526020016040518060400160405280600460000b60000b81526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60000b60000b8152508152508152602001604051806080016040528060405180604001604052806000800b60000b81526020017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60000b60000b815250815260200160405180604001604052806000800b60000b81526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60000b60000b815250815260200160405180604001604052806000800b60000b81526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd60000b60000b815250815260200160405180604001604052806000800b60000b81526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60000b60000b8152508152508152602001604051806080016040528060405180604001604052807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60000b60000b81526020017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60000b60000b815250815260200160405180604001604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60000b60000b81526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60000b60000b815250815260200160405180604001604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd60000b60000b81526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd60000b60000b815250815260200160405180604001604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60000b60000b81526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60000b60000b8152508152508152602001604051806080016040528060405180604001604052807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60000b60000b81526020016000800b60000b815250815260200160405180604001604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60000b60000b81526020016000800b60000b815250815260200160405180604001604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd60000b60000b81526020016000800b60000b815250815260200160405180604001604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60000b60000b81526020016000800b60000b8152508152508152602001604051806080016040528060405180604001604052807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60000b60000b8152602001600160000b60000b815250815260200160405180604001604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60000b60000b8152602001600260000b60000b815250815260200160405180604001604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd60000b60000b8152602001600360000b60000b815250815260200160405180604001604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60000b60000b8152602001600460000b60000b815250815250815250905060005b60088160ff16101561170e5760005b60048160ff1610156116fa576000838360ff1660088110611405577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201518260ff1660048110611445577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151600060028110611483577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201518a6114939190612495565b90506000848460ff16600881106114d3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201518360ff1660048110611513577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151600160028110611551577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201518a6115619190612495565b905060008260000b1280611579575060138260000b12155b80611587575060008160000b125b80611596575060138160000b12155b156115a25750506116fa565b876000015160028111156115df577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b87600001518260ff1660136115f49190612579565b8460ff16611602919061250a565b61ffff16610169811061163e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151600281111561167b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156116de57858460ff16600881106116bd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020180518091906116cf906126ff565b60ff1660ff16815250506116e5565b50506116fa565b505080806116f2906126ff565b9150506113bb565b508080611706906126ff565b9150506113ac565b5060005b60048160ff1610156118465760048360048361172e9190612542565b60ff1660088110611768577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151848360ff16600881106117a9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201516117b89190612542565b60ff161061183357600180600087602001518152602001908152602001600020600c0160016101000a81548160ff02191690831515021790555084602001517f668ce4ca171dee87d4d9d2b5d3dc31963fe7fbe50b982064dddb0fb9d56aee8b3360405161182691906123a0565b60405180910390a2611846565b808061183e906126ff565b915050611712565b5050505b5050505050565b611859611feb565b600160008381526020019081526020016000206000016101698060200260405190810160405280929190826101698015611903576020028201916000905b82829054906101000a900460ff1660028111156118dd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200190600101906020826000010492830192600103820291508084116118975790505b50505050509050919050565b6000611919611feb565b6000604051806060016040528083815260200160016002811115611966577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200160001515815250905080600160006003600081819054906101000a900463ffffffff16611997906126d2565b91906101000a81548163ffffffff021916908363ffffffff160217905563ffffffff168152602001908152602001600020600082015181600001906101696119e092919061200f565b50602082015181600c0160006101000a81548160ff02191690836002811115611a32577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550604082015181600c0160016101000a81548160ff0219169083151502179055509050506000611a668686611d14565b9050600081611a76576001611a79565b60025b9050600082611a89576002611a8c565b60015b90506040518060600160405280836002811115611ad2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600360009054906101000a900463ffffffff1663ffffffff16815260200160011515815250600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff02191690836002811115611b8c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506020820151816001015560408201518160020160006101000a81548160ff0219169083151502179055509050506040518060600160405280826002811115611c02577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600360009054906101000a900463ffffffff1663ffffffff16815260200160011515815250600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff02191690836002811115611cbc577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506020820151816001015560408201518160020160006101000a81548160ff021916908315150217905550905050600360009054906101000a900463ffffffff1663ffffffff169550505050505092915050565b600080600273Ee165a65Db324484CF4257B4317e6Fa2f181A2c0635edb2fb3426040518263ffffffff1660e01b8152600401611d509190612436565b60206040518083038186803b158015611d6857600080fd5b505af4158015611d7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611da09190612150565b73Ee165a65Db324484CF4257B4317e6Fa2f181A2c06382c947b7866040518263ffffffff1660e01b8152600401611dd79190612385565b60206040518083038186803b158015611def57600080fd5b505af4158015611e03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e279190612150565b73Ee165a65Db324484CF4257B4317e6Fa2f181A2c06382c947b7886040518263ffffffff1660e01b8152600401611e5e9190612385565b60206040518083038186803b158015611e7657600080fd5b505af4158015611e8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eae9190612150565b1818604051602001611ec09190612353565b604051602081830303815290604052604051611edc919061236e565b602060405180830381855afa158015611ef9573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190611f1c9190612150565b9050600060028260001c611f309190612733565b1415611f40576001915050611f46565b60009150505b92915050565b5080546000825590600052602060002090810190611f6a91906120df565b50565b604051806060016040528060006002811115611fb2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600081526020016000151581525090565b604051806101000160405280600890602082028036833780820191505090505090565b60405180612d20016040528061016990602082028036833780820191505090505090565b82610169601f016020900481019282156120ce5791602002820160005b8382111561209f57835183826101000a81548160ff0219169083600281111561207e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550926020019260010160208160000104928301926001030261202c565b80156120cc5782816101000a81549060ff021916905560010160208160000104928301926001030261209f565b505b5090506120db91906120df565b5090565b5b808211156120f85760008160009055506001016120e0565b5090565b60008135905061210b81612805565b92915050565b6000815190506121208161281c565b92915050565b60008135905061213581612833565b92915050565b60008135905061214a8161284a565b92915050565b60006020828403121561216257600080fd5b600061217084828501612111565b91505092915050565b60006020828403121561218b57600080fd5b600061219984828501612126565b91505092915050565b6000806000606084860312156121b757600080fd5b60006121c58682870161213b565b93505060206121d68682870161213b565b92505060406121e7868287016120fc565b9150509250925092565b60006121fd83836122d5565b60208301905092915050565b612212816125f0565b82525050565b612221816125f0565b82525050565b6122308161245b565b61223a818461247f565b925061224582612451565b8060005b8381101561227657815161225d87826121f1565b965061226883612472565b925050600181019050612249565b505050505050565b61228781612602565b82525050565b61229e6122998261260e565b612729565b82525050565b60006122af82612467565b6122b9818561248a565b93506122c981856020860161269f565b80840191505092915050565b6122de8161268d565b82525050565b6122ed8161268d565b82525050565b60608201600082015161230960008501826122d5565b50602082015161231c6020850182612335565b50604082015161232f604085018261227e565b50505050565b61233e81612666565b82525050565b61234d81612666565b82525050565b600061235f828461228d565b60208201915081905092915050565b600061237a82846122a4565b915081905092915050565b600060208201905061239a6000830184612218565b92915050565b60006020820190506123b56000830184612209565b92915050565b60006040820190506123d06000830185612209565b6123dd6020830184612209565b9392505050565b6000612d20820190506123fa6000830184612227565b92915050565b600060208201905061241560008301846122e4565b92915050565b600060608201905061243060008301846122f3565b92915050565b600060208201905061244b6000830184612344565b92915050565b6000819050919050565b60006101699050919050565b600081519050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b60006124a08261262b565b91506124ab8361262b565b925081607f038313600083121516156124c7576124c6612764565b5b817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800383126000831216156124ff576124fe612764565b5b828201905092915050565b600061251582612638565b915061252083612638565b92508261ffff0382111561253757612536612764565b5b828201905092915050565b600061254d82612680565b915061255883612680565b92508260ff0382111561256e5761256d612764565b5b828201905092915050565b600061258482612638565b915061258f83612638565b92508161ffff04831182151516156125aa576125a9612764565b5b828202905092915050565b60006125c082612680565b91506125cb83612680565b92508160ff04831182151516156125e5576125e4612764565b5b828202905092915050565b60006125fb82612646565b9050919050565b60008115159050919050565b6000819050919050565b6000819050612626826127f1565b919050565b60008160000b9050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600060ff82169050919050565b600061269882612618565b9050919050565b60005b838110156126bd5780820151818401526020810190506126a2565b838111156126cc576000848401525b50505050565b60006126dd82612670565b915063ffffffff8214156126f4576126f3612764565b5b600182019050919050565b600061270a82612680565b915060ff82141561271e5761271d612764565b5b600182019050919050565b6000819050919050565b600061273e82612666565b915061274983612666565b92508261275957612758612793565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110612802576128016127c2565b5b50565b61280e81612602565b811461281957600080fd5b50565b6128258161260e565b811461283057600080fd5b50565b61283c81612666565b811461284757600080fd5b50565b61285381612680565b811461285e57600080fd5b5056fea2646970667358221220bc1da9579b587b5b92036037b043e051e47662b1f1b35b2eb3e07fc500552a4b64736f6c63430008040033",
  "deployedBytecode": "$a74ec4f9c45ea3e03fb5242c6921c0f692$__635edb2fb3426040518263ffffffff1660e01b8152600401611d509190612436565b60206040518083038186803b158015611d6857600080fd5b505af4158015611d7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611da09190612150565b73__$a74ec4f9c45ea3e03fb5242c6921c0f692$__6382c947b7866040518263ffffffff1660e01b8152600401611dd79190612385565b60206040518083038186803b158015611def57600080fd5b505af4158015611e03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e279190612150565b73__$a74ec4f9c45ea3e03fb5242c6921c0f692$__6382c947b7886040518263ffffffff1660e01b8152600401611e5e9190612385565b60206040518083038186803b158015611e7657600080fd5b505af4158015611e8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eae9190612150565b1818604051602001611ec09190612353565b604051602081830303815290604052604051611edc919061236e565b602060405180830381855afa158015611ef9573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190611f1c9190612150565b9050600060028260001c611f309190612733565b1415611f40576001915050611f46565b60009150505b92915050565b5080546000825590600052602060002090810190611f6a91906120df565b50565b604051806060016040528060006002811115611fb2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600081526020016000151581525090565b604051806101000160405280600890602082028036833780820191505090505090565b60405180612d20016040528061016990602082028036833780820191505090505090565b82610169601f016020900481019282156120ce5791602002820160005b8382111561209f57835183826101000a81548160ff0219169083600281111561207e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550926020019260010160208160000104928301926001030261202c565b80156120cc5782816101000a81549060ff021916905560010160208160000104928301926001030261209f565b505b5090506120db91906120df565b5090565b5b808211156120f85760008160009055506001016120e0565b5090565b60008135905061210b81612805565b92915050565b6000815190506121208161281c565b92915050565b60008135905061213581612833565b92915050565b60008135905061214a8161284a565b92915050565b60006020828403121561216257600080fd5b600061217084828501612111565b91505092915050565b60006020828403121561218b57600080fd5b600061219984828501612126565b91505092915050565b6000806000606084860312156121b757600080fd5b60006121c58682870161213b565b93505060206121d68682870161213b565b92505060406121e7868287016120fc565b9150509250925092565b60006121fd83836122d5565b60208301905092915050565b612212816125f0565b82525050565b612221816125f0565b82525050565b6122308161245b565b61223a818461247f565b925061224582612451565b8060005b8381101561227657815161225d87826121f1565b965061226883612472565b925050600181019050612249565b505050505050565b61228781612602565b82525050565b61229e6122998261260e565b612729565b82525050565b60006122af82612467565b6122b9818561248a565b93506122c981856020860161269f565b80840191505092915050565b6122de8161268d565b82525050565b6122ed8161268d565b82525050565b60608201600082015161230960008501826122d5565b50602082015161231c6020850182612335565b50604082015161232f604085018261227e565b50505050565b61233e81612666565b82525050565b61234d81612666565b82525050565b600061235f828461228d565b60208201915081905092915050565b600061237a82846122a4565b915081905092915050565b600060208201905061239a6000830184612218565b92915050565b60006020820190506123b56000830184612209565b92915050565b60006040820190506123d06000830185612209565b6123dd6020830184612209565b9392505050565b6000612d20820190506123fa6000830184612227565b92915050565b600060208201905061241560008301846122e4565b92915050565b600060608201905061243060008301846122f3565b92915050565b600060208201905061244b6000830184612344565b92915050565b6000819050919050565b60006101699050919050565b600081519050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b60006124a08261262b565b91506124ab8361262b565b925081607f038313600083121516156124c7576124c6612764565b5b817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800383126000831216156124ff576124fe612764565b5b828201905092915050565b600061251582612638565b915061252083612638565b92508261ffff0382111561253757612536612764565b5b828201905092915050565b600061254d82612680565b915061255883612680565b92508260ff0382111561256e5761256d612764565b5b828201905092915050565b600061258482612638565b915061258f83612638565b92508161ffff04831182151516156125aa576125a9612764565b5b828202905092915050565b60006125c082612680565b91506125cb83612680565b92508160ff04831182151516156125e5576125e4612764565b5b828202905092915050565b60006125fb82612646565b9050919050565b60008115159050919050565b6000819050919050565b6000819050612626826127f1565b919050565b60008160000b9050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600060ff82169050919050565b600061269882612618565b9050919050565b60005b838110156126bd5780820151818401526020810190506126a2565b838111156126cc576000848401525b50505050565b60006126dd82612670565b915063ffffffff8214156126f4576126f3612764565b5b600182019050919050565b600061270a82612680565b915060ff82141561271e5761271d612764565b5b600182019050919050565b6000819050919050565b600061273e82612666565b915061274983612666565b92508261275957612758612793565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110612802576128016127c2565b5b50565b61280e81612602565b811461281957600080fd5b50565b6128258161260e565b811461283057600080fd5b50565b61283c81612666565b811461284757600080fd5b50565b61285381612680565b811461285e57600080fd5b5056fea2646970667358221220bc1da9579b587b5b92036037b043e051e47662b1f1b35b2eb3e07fc500552a4b64736f6c63430008040033",
  "libraries": {
    "Convert": "0xEe165a65Db324484CF4257B4317e6Fa2f181A2c0"
  },
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 137,
        "contract": "contracts/GoGame.sol:GoGame",
        "label": "matchQueue",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 142,
        "contract": "contracts/GoGame.sol:GoGame",
        "label": "matchIdToGS",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(GameState)108_storage)"
      },
      {
        "astId": 147,
        "contract": "contracts/GoGame.sol:GoGame",
        "label": "addressToPS",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_struct(PlayerState)116_storage)"
      },
      {
        "astId": 149,
        "contract": "contracts/GoGame.sol:GoGame",
        "label": "matchCnt",
        "offset": 0,
        "slot": "3",
        "type": "t_uint32"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_enum(StoneType)95)361_storage": {
        "base": "t_enum(StoneType)95",
        "encoding": "inplace",
        "label": "enum GoGame.StoneType[361]",
        "numberOfBytes": "384"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(StoneType)95": {
        "encoding": "inplace",
        "label": "enum GoGame.StoneType",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(PlayerState)116_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct GoGame.PlayerState)",
        "numberOfBytes": "32",
        "value": "t_struct(PlayerState)116_storage"
      },
      "t_mapping(t_uint256,t_struct(GameState)108_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct GoGame.GameState)",
        "numberOfBytes": "32",
        "value": "t_struct(GameState)108_storage"
      },
      "t_struct(GameState)108_storage": {
        "encoding": "inplace",
        "label": "struct GoGame.GameState",
        "members": [
          {
            "astId": 102,
            "contract": "contracts/GoGame.sol:GoGame",
            "label": "boardState",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_enum(StoneType)95)361_storage"
          },
          {
            "astId": 105,
            "contract": "contracts/GoGame.sol:GoGame",
            "label": "turn",
            "offset": 0,
            "slot": "12",
            "type": "t_enum(StoneType)95"
          },
          {
            "astId": 107,
            "contract": "contracts/GoGame.sol:GoGame",
            "label": "isOver",
            "offset": 1,
            "slot": "12",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "416"
      },
      "t_struct(PlayerState)116_storage": {
        "encoding": "inplace",
        "label": "struct GoGame.PlayerState",
        "members": [
          {
            "astId": 111,
            "contract": "contracts/GoGame.sol:GoGame",
            "label": "stoneType",
            "offset": 0,
            "slot": "0",
            "type": "t_enum(StoneType)95"
          },
          {
            "astId": 113,
            "contract": "contracts/GoGame.sol:GoGame",
            "label": "matchId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 115,
            "contract": "contracts/GoGame.sol:GoGame",
            "label": "inGame",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      }
    }
  }
}